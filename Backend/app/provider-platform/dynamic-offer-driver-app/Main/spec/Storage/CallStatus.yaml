imports:
  Merchant: Domain.Types.Merchant
  MerchantOperatingCity: Domain.Types.Merchant.MerchantOperatingCity
  CallService: Kernel.External.Call.Types

CallStatus:
  tableName: call_status

  fields:
    id : Id CallStatus
    callId : Text
    entityId : Maybe Text
    dtmfNumberUsed : Maybe Text
    status : Kernel.External.Call.Interface.Types.CallStatus
    recordingUrl : Maybe Text
    conversationDuration : Int
    merchantId : Maybe Text
    callService : Maybe CallService
    callError : Maybe Text
    createdAt: UTCTime

  constraints:
    id: PrimaryKey
    callId: SecondaryKey

  queries:
    findById:
      kvFunction: findOneWithKV
      where: id

    updateCallStatus:
      kvFunction: updateWithKV
      params: [conversationDuration, recordingUrl, status]
      where: id

    updateCallError:
      kvFunction: updateWithKV
      params: [callError, callService, merchantId]
      where: id

    updateCallStatusWithRideId:
      kvFunction: updateWithKV
      params: [entityId, dtmfNumberUsed, merchantId, callService]
      where: id

  extraOperations:
    - EXTRA_QUERY_FILE

  sqlType:
    callId: character varying (255)
    recordingUrl: character varying (255)
    status: character varying (255)
    conversationDuration: bigint
    dtmfNumberUsed: character varying (255)
    entityId: character varying (36)
    merchantId: character varying (36)

  default:
    entityId: "'UNKNOWN'"

  excludedFields: [merchantOperatingCityId, merchantId, createdAt, updatedAt]

  excludedDefaultQueries:
    - create
