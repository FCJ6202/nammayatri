imports:
  Merchant: Domain.Types.Merchant
  MerchantOperatingCity: Domain.Types.MerchantOperatingCity
  Bool: Kernel.Prelude
  Text: Data.Text
  Seconds: Kernel.Types.Common
  Int: Kernel.Prelude

LeaderBoardConfigs:
  tableName: leader_board_configs

  fields:
    id : Id LeaderBoardConfigs
    leaderBoardType : LeaderBoardType
    numberOfSets : Int
    leaderBoardExpiry : Seconds
    zScoreBase : Int
    leaderBoardLengthLimit : Int
    isEnabled : Bool
    merchantId : Id Merchant
    merchantOperatingCityId : Id MerchantOperatingCity
    useOperatingCityBasedLeaderBoard : Maybe Bool

  types:
    LeaderBoardType:
      enum: "WEEKLY,DAILY,MONTHLY"

  constraints:
    id: PrimaryKey

  queries:
    findAllByMerchantOpCityId:
      kvFunction: findAllWithDb
      where: merchantOperatingCityId
    findLeaderBoardConfigbyType:
      kvFunction: findOneWithDb
      where:
        and: [leaderBoardType, merchantOperatingCityId]