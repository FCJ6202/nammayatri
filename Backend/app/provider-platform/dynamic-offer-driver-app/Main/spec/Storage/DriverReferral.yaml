imports:
  Person: Domain.Types.Person
  Role: Domain.Types.Person
  Ride: Domain.Types.Ride
  Merchant: Domain.Types.Merchant
  MerchantOperatingCity: Domain.Types.MerchantOperatingCity
  UTCTime: Kernel.Prelude
  Text: Data.Text
  Money: Kernel.Types.Common

DriverReferral:
  tableName: driver_referral

  fields:
    referralCode : Id DriverReferral
    driverId : Id Person
    role : Role
    linkedAt : UTCTime

  default:
    role: "'DRIVER'"

  beamType:
    role: Maybe Role

  fromTType:
    role: Kernel.Prelude.fromMaybe Domain.Types.Person.DRIVER|I

  toTType:
    role: Kernel.Prelude.Just|I

  constraints:
    referralCode: PrimaryKey
    driverId: SecondaryKey


  queries:
    findByRefferalCode:
      kvFunction: findOneWithKV
      where: referralCode

    findById:
      kvFunction: findOneWithKV
      where: driverId

  extraOperations:
    - EXTRA_QUERY_FILE