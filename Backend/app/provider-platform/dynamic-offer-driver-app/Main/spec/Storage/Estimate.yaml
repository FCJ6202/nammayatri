imports:
  FareParameters: Domain.Types.FareParameters
  FarePolicy: Domain.Types.FarePolicy
  TripCategory: Domain.Types.Common
  ServiceTierType: Domain.Types.ServiceTierType
  SearchRequest: Domain.Types.SearchRequest
  Money: Kernel.Types.Common


Estimate:
    tableName: estimate

    derives: "Generic,Show"

    beamInstance: MakeTableInstancesWithTModifier []

    fields:
      id: Id Estimate
      requestId: Id SearchRequest
      vehicleServiceTier: ServiceTierType|NoRelation
      vehicleServiceTierName: Maybe Text
      tripCategory: TripCategory
      minFare: Money
      maxFare: Money
      estimatedDistance: Maybe Distance
      fareParams: Maybe FareParameters|WithIdCreate
      farePolicy: Maybe FarePolicy|NoRelation
      specialLocationTag: Maybe Text
      driverPickUpCharge: Maybe Money
      isScheduled: Bool
      createdAt: UTCTime
      updatedAt: UTCTime

    excludedFields:
      - merchantId
      - merchantOperatingCityId

    beamFields:
      farePolicy:
        farePolicyId: Maybe Text
      vehicleServiceTier: "vehicleVariant"
      estimatedDistance:
        estimatedDistance : Maybe Meters
        estimatedDistanceValue : Maybe HighPrecDistance
        distanceUnit : Maybe DistanceUnit

    sqlType:
      farePolicyId: character varying(36)
    beamType:
      updatedAt: Maybe UTCTime
      isScheduled: Maybe Bool
      tripCategory: Maybe TripCategory

    fromTType:
      updatedAt: Kernel.Prelude.fromMaybe createdAt|I
      isScheduled: Kernel.Prelude.fromMaybe Kernel.Prelude.False|I
      tripCategory: Kernel.Prelude.fromMaybe (Domain.Types.Common.OneWay Domain.Types.Common.OneWayOnDemandDynamicOffer)|I
      farePolicy: maybe (pure Nothing) ((Storage.CachedQueries.FarePolicy.findById Nothing Nothing) . Kernel.Types.Id.Id)|IM
      estimatedDistance: Kernel.Types.Common.mkDistanceWithDefaultMeters distanceUnit estimatedDistanceValue <$> estimatedDistance|E

    # distanceUnit should be the same for all fields
    toTType:
      updatedAt: Kernel.Prelude.Just|I
      isScheduled: Kernel.Prelude.Just|I
      tripCategory: Kernel.Prelude.Just|I
      farePolicyId: (Kernel.Types.Id.getId . (.id) <$>)
      estimatedDistance: Kernel.Prelude.fmap Kernel.Types.Common.distanceToMeters|I
      estimatedDistanceValue: Kernel.Prelude.fmap (Kernel.Types.Common.distanceToHighPrecDistance (Kernel.Prelude.fmap (.unit) estimatedDistance))|I
      distanceUnit: Kernel.Prelude.fmap (.unit) estimatedDistance|E

    queries:
      findById:
        kvFunction: findOneWithKV
        where:
          and: [id]