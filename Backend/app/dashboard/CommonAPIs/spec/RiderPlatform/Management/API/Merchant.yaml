imports:
  ExophoneReq: Dashboard.Common.Merchant
  FCMConfigUpdateReq: Dashboard.Common.Merchant
  MapsServiceConfigUpdateReq: Dashboard.Common.Merchant
  SmsServiceConfigUpdateReq: Dashboard.Common.Merchant
  ServiceUsageConfigRes: Dashboard.Common.Merchant
  MapsServiceUsageConfigUpdateReq: Dashboard.Common.Merchant
  SmsServiceUsageConfigUpdateReq: Dashboard.Common.Merchant
  CreateMerchantOperatingCityReq: Dashboard.Common.Merchant
  CreateMerchantOperatingCityRes: Dashboard.Common.Merchant
  CreateMerchantOperatingCityReqT: Dashboard.Common.Merchant
  SpecialLocation: Lib.Types.SpecialLocation
  UpsertSpecialLocationReq: Dashboard.Common.Merchant
  UpsertSpecialLocationReqT: Dashboard.Common.Merchant
  UpsertSpecialLocationGateReq: Dashboard.Common.Merchant
  UpsertSpecialLocationGateReqT: Dashboard.Common.Merchant
  City: Kernel.Types.Beckn.Context
  ToParamSchema: Kernel.Prelude
  FromHttpApiData: Servant
  ToHttpApiData: Servant
  HideSecrets: Kernel.Types.HideSecrets
  ConfigNames: Dashboard.Common.Merchant
  ConfigFailoverReq: Dashboard.Common.Merchant
  WhatsappProviderEnums: Dashboard.Common.Merchant
  NetworkEnums: Dashboard.Common.Merchant
  PriorityListWrapperType: Dashboard.Common.Merchant
module: Merchant

apis:
  - POST: # MerchantUpdateAPI
      endpoint: /update
      auth:
        ApiAuth APP_BACKEND_MANAGEMENT MERCHANT MERCHANT_UPDATE
      request:
        type: MerchantUpdateReq
      response:
        type: APISuccess
      validation: Dashboard.RiderPlatform.Merchant.validateMerchantUpdateReq
      migrate:
        endpoint: MerchantAPI MerchantUpdateEndpoint
        endpointV2:
  - GET: # ServiceUsageConfigAPI
      endpoint: /serviceUsageConfig
      auth:
        ApiAuth APP_BACKEND_MANAGEMENT MERCHANT SERVICE_USAGE_CONFIG
      response:
        type: ServiceUsageConfigRes
  - POST: # MapsServiceConfigUpdateAPI
      endpoint: /serviceConfig/maps/update
      auth:
        ApiAuth APP_BACKEND_MANAGEMENT MERCHANT MAPS_SERVICE_CONFIG_UPDATE
      request:
        type: MapsServiceConfigUpdateReq
      response:
        type: APISuccess
      migrate:
        endpoint: MerchantAPI MapsServiceConfigUpdateEndpoint
        endpointV2:
  - POST: # MapsServiceUsageConfigUpdateAPI
      endpoint: /serviceUsageConfig/maps/update
      auth:
        ApiAuth APP_BACKEND_MANAGEMENT MERCHANT MAPS_SERVICE_USAGE_CONFIG_UPDATE
      request:
        type: MapsServiceUsageConfigUpdateReq
      response:
        type: APISuccess
      validation: Dashboard.Common.Merchant.validateMapsServiceUsageConfigUpdateReq
      migrate:
        endpoint: MerchantAPI MapsServiceConfigUsageUpdateEndpoint
        endpointV2:
  - POST: # SmsServiceConfigUpdateAPI
      endpoint: /serviceConfig/sms/update
      auth:
        ApiAuth APP_BACKEND_MANAGEMENT MERCHANT SMS_SERVICE_CONFIG_UPDATE
      request:
        type: SmsServiceConfigUpdateReq
      response:
        type: APISuccess
      migrate:
        endpoint: MerchantAPI SmsServiceConfigUpdateEndpoint
        endpointV2:
  - POST: # SmsServiceUsageConfigUpdateAPI
      endpoint: /serviceUsageConfig/sms/update
      auth:
        ApiAuth APP_BACKEND_MANAGEMENT MERCHANT SMS_SERVICE_USAGE_CONFIG_UPDATE
      request:
        type: SmsServiceUsageConfigUpdateReq
      response:
        type: APISuccess
      validation: Dashboard.Common.Merchant.validateSmsServiceUsageConfigUpdateReq
      migrate:
        endpoint: MerchantAPI SmsServiceConfigUsageUpdateEndpoint
        endpointV2:
  - POST: # CreateMerchantOperatingCityAPI
      endpoint: /config/operatingCity/create
      auth:
        ApiAuth APP_BACKEND_MANAGEMENT MERCHANT CREATE_MERCHANT_OPERATING_CITY
      multipart:
        type: CreateMerchantOperatingCityReq
      response:
        type: CreateMerchantOperatingCityRes
      helperApi:
        - POST:
            endpoint: /config/operatingCity/create
            auth: # TODO remove
              ApiAuth APP_BACKEND_MANAGEMENT MERCHANT CREATE_MERCHANT_OPERATING_CITY
            request:
              type: CreateMerchantOperatingCityReqT
            response:
              type: CreateMerchantOperatingCityRes
      migrate:
        endpoint: MerchantAPI CreateMerchantOperatingCityEndpoint
        endpointV2:
  - POST: # UpsertSpecialLocationAPI
      endpoint: /specialLocation/upsert
      query:
        specialLocationId: Id SpecialLocation
      auth:
        ApiAuth APP_BACKEND_MANAGEMENT MERCHANT UPSERT_SPECIAL_LOCATION
      multipart:
        type: UpsertSpecialLocationReq
      response:
        type: APISuccess
      helperApi:
        - POST:
            endpoint: /specialLocation/upsert
            query:
              specialLocationId: Id SpecialLocation
            auth:
              ApiAuth APP_BACKEND_MANAGEMENT MERCHANT UPSERT_SPECIAL_LOCATION # TODO serverName move to dhall
            request:
              type: UpsertSpecialLocationReqT
            response:
              type: APISuccess
      migrate:
        endpoint: MerchantAPI UpsertSpecialLocationEndpoint
        endpointV2:
  - DELETE: # DeleteSpecialLocationAPI
      endpoint: /specialLocation/{specialLocationId}/delete
      params:
        specialLocationId : Id SpecialLocation
      auth:
        ApiAuth APP_BACKEND_MANAGEMENT MERCHANT DELETE_SPECIAL_LOCATION
      response:
        type: APISuccess
      migrate:
        endpoint: MerchantAPI DeleteSpecialLocationEndpoint
        endpointV2:
  - POST: # UpsertSpecialLocationGateAPI
      endpoint: /specialLocation/{specialLocationId}/gates/upsert
      params:
        specialLocationId : Id SpecialLocation
      auth:
        ApiAuth APP_BACKEND_MANAGEMENT MERCHANT UPSERT_SPECIAL_LOCATION_GATE
      multipart:
        type: UpsertSpecialLocationGateReq
      response:
        type: APISuccess
      helperApi:
        - POST:
            endpoint: /specialLocation/{specialLocationId}/gates/upsert
            params:
              specialLocationId : Id SpecialLocation
            auth:
              ApiAuth APP_BACKEND_MANAGEMENT MERCHANT UPSERT_SPECIAL_LOCATION_GATE
            request:
              type: UpsertSpecialLocationGateReqT
            response:
              type: APISuccess
      migrate:
        endpoint: MerchantAPI UpsertSpecialLocationGateEndpoint
        endpointV2:
  - DELETE: # DeleteSpecialLocationGateAPI
      endpoint: /specialLocation/{specialLocationId}/gates/delete/{gateName}
      params:
        specialLocationId : Id SpecialLocation
        gateName: Text
      auth:
        ApiAuth APP_BACKEND_MANAGEMENT MERCHANT DELETE_SPECIAL_LOCATION_GATE
      response:
        type: APISuccess
      migrate:
        endpoint: MerchantAPI DeleteSpecialLocationGateEndpoint
        endpointV2:
  - POST: #ToggleConfigPriorityAPI
      endpoint: /config/{configName}/failover
      params:
        configName: ConfigNames
      request:
        type: ConfigFailoverReq
      response:
        type: APISuccess
      auth: ApiAuth APP_BACKEND_MANAGEMENT MERCHANT TOGGLE_CONFIG_PRIORITY
      migrate:
        endpoint: MerchantAPI ToggleConfigPriorityEndpoint
        endpointV2:
types:
  MerchantUpdateReq:
    - name: Maybe Text
    - exoPhones: Maybe (NonEmpty ExophoneReq)
    - fcmConfig: Maybe FCMConfigUpdateReq
    - gatewayUrl: Maybe BaseUrl
    - registryUrl: Maybe BaseUrl


extraOperations:
  - EXTRA_API_TYPES_FILE
