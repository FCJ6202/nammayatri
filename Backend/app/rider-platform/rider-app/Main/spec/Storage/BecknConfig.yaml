imports:
  Base64: Kernel.Types.Base64
  Merchant: Domain.Types.Merchant
  MerchantOperatingCity: Domain.Types.MerchantOperatingCity
  BaseUrl: Servant.Client.Core
  showBaseUrl: Kernel.Prelude
  parseBaseUrl: Kernel.Prelude
  VehicleCategory: BecknV2.OnDemand.Enums
  Network: BecknV2.FRFS.Enums

BecknConfig:
  tableName: beckn_config

  fields:
    id: Id BecknConfig
    domain: Text
    subscriberId: Text
    subscriberUrl: BaseUrl
    gatewayUrl: BaseUrl
    registryUrl: BaseUrl
    uniqueKeyId: Text
    settlementType: Maybe Text
    paymentParamsJson: Maybe Text
    vehicleCategory: VehicleCategory|NoRelation
    collectedBy: Network
    staticTermsUrl: Maybe BaseUrl
    buyerFinderFee: Maybe Text # becomes redundant
    settlementWindow: Maybe Text
    searchTTLSec: Maybe Int
    selectTTLSec: Maybe Int
    initTTLSec: Maybe Int
    confirmTTLSec: Maybe Int
    confirmBufferTTLSec: Maybe Int
    bapIFSC: Maybe Text
    statusTTLSec: Maybe Int
    trackTTLSec: Maybe Int
    ratingTTLSec: Maybe Int
    cancelTTLSec: Maybe Int
    provider: Provider

  derives: "Generic,Show,FromJSON,ToJSON"

  types:
    Provider:
      enum: "ONDC, EBIX"

  default:
    vehicleCategory: "'CAB'"
    provider: "'ONDC'"
    collectedBy: "'BPP'"

  queries:
    findByMerchantIdAndDomain:
      kvFunction: findAllWithKV
      where:
        and: [merchantId, domain]
    findById:
      kvFunction: findOneWithKV
      where: id
    findByMerchantIdDomainandMerchantOperatingCityId:
      kvFunction: findAllWithKV
      where:
        and: [merchantId, domain, merchantOperatingCityId]

  extraOperations:
    - EXTRA_QUERY_FILE

  beamType:
    subscriberUrl: Text
    gatewayUrl: Text
    registryUrl: Text
    staticTermsUrl: Maybe Text
    provider: Maybe Provider
    verifiedBy: Maybe Network

  toTType:
    subscriberUrl: showBaseUrl|I
    gatewayUrl: showBaseUrl|I
    registryUrl: showBaseUrl|I
    staticTermsUrl: (Kernel.Prelude.fmap showBaseUrl)|I
    provider: Kernel.Prelude.Just|I

  fromTType:
    subscriberUrl: parseBaseUrl|MI
    gatewayUrl: parseBaseUrl|IM
    registryUrl: parseBaseUrl|MI
    provider: Kernel.Prelude.fromMaybe Domain.Types.BecknConfig.ONDC|I
    staticTermsUrl: (Kernel.Prelude.maybe (return Kernel.Prelude.Nothing) (Kernel.Prelude.fmap Kernel.Prelude.Just . parseBaseUrl))|MI

IntegratedBPPConfig:
  tableName: integrated_bpp_config

  fields:
    id: Id IntegratedBPPConfig
    domain: Text
    merchantOperatingCityId: Id MerchantOperatingCity
    merchantId: Id Merchant
    vehicleCategory: VehicleCategory|NoRelation
    qrGeneratedBy: Network
    qrGenerationKey: Maybe Base64
    qrVerifiedBy: Network
    qrVerificationKey: Maybe Base64

  derives: "Generic,Show,FromJSON,ToJSON"

  default:
    vehicleCategory: "'BUS'"
    qrGeneratedBy: "'BAP'"
    qrVerifiedBy: "'BPP'"

  queries:
    findByDomainAndCityAndVehicleCategory:
      kvFunction: findOneWithKV
      where:
        and: [domain, merchantOperatingCityId, vehicleCategory]

  cachedQueries:
    findByDomainAndCityAndVehicleCategory:
      keyParams: [domain, merchantOperatingCityId, vehicleCategory]
      dbQuery: findByDomainAndCityAndVehicleCategory
      dbQueryParams: [domain, merchantOperatingCityId, vehicleCategory]
      queryType: FindAndCache
