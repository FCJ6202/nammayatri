imports:
  Merchant: Domain.Types.Merchant
  MerchantOperatingCity: Domain.Types.MerchantOperatingCity
  ServiceConfigD: Domain.Types.Merchant.MerchantServiceConfig
  TicketPlace: Domain.Types.TicketPlace
  Value: Data.Aeson
  ServiceName: Domain.Types.Merchant.MerchantServiceConfig

PlaceBasedServiceConfig:
  tableName: place_based_service_config

  derives: "Generic,'UsageSafety"

  fields:
    serviceConfig: ServiceConfigD s
    placeId: Id TicketPlace
    merchantOperatingCityId: Id MerchantOperatingCity
    merchantId: Id Merchant

  beamFields:
    serviceConfig:
      serviceName: ServiceName
      configValue: Value

  constraints:
    placeId: PrimaryKey

  sqlType:
    configValue: json

  toTType:
    serviceName: fst $ Storage.Queries.Merchant.MerchantServiceConfig.getServiceNameConfigJson serviceConfig|E
    configValue: snd $ Storage.Queries.Merchant.MerchantServiceConfig.getServiceNameConfigJson serviceConfig|E

  fromTType:
    serviceConfig: Storage.Queries.Merchant.MerchantServiceConfig.getServiceConfigFromDomain serviceName configValue|EM

  excludedDefaultQueries:
    - updateByPrimaryKey
    - findByPrimaryKey

  extraOperations:
    - EXTRA_QUERY_FILE