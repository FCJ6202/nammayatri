{
    "swagger": "2.0",
    "host": "http://localhost:8012",
    "info": {
        "version": "1.0",
        "title": "Epass API",
        "license": {
            "url": "http://mit.com",
            "name": "MIT"
        },
        "description": "This is an API document for beckn epas"
    },
    "definitions": {
        "Status": {
            "type": "string",
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "InitiateLoginRes": {
            "required": [
                "tokenId",
                "attempts"
            ],
            "type": "object",
            "properties": {
                "tokenId": {
                    "type": "string"
                },
                "attempts": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                }
            }
        },
        "PassApplicationT": {
            "required": [
                "id",
                "status",
                "fromDate",
                "toDate",
                "passType",
                "CreatedBy",
                "AssignedTo",
                "count",
                "approvedCount",
                "remarks",
                "info",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "toWard": {
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "count": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "approvedCount": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "fromAddress": {
                    "type": "string"
                },
                "fromDistrict": {
                    "type": "string"
                },
                "toAddress": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "id": {
                    "type": "string"
                },
                "TenantOrganizationId": {
                    "type": "string"
                },
                "toDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "fromLong": {
                    "format": "double",
                    "type": "number"
                },
                "toCity": {
                    "type": "string"
                },
                "toBound": {
                    "$ref": "#/definitions/Bound"
                },
                "toLong": {
                    "format": "double",
                    "type": "number"
                },
                "CustomerId": {
                    "type": "string"
                },
                "passType": {
                    "$ref": "#/definitions/PassType"
                },
                "fromState": {
                    "type": "string"
                },
                "toPincode": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "remarks": {
                    "type": "string"
                },
                "fromCity": {
                    "type": "string"
                },
                "toLocationType": {
                    "$ref": "#/definitions/LocationType"
                },
                "fromLocationType": {
                    "$ref": "#/definitions/LocationType"
                },
                "AssignedTo": {
                    "type": "string"
                },
                "toCountry": {
                    "type": "string"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "toDistrict": {
                    "type": "string"
                },
                "toLat": {
                    "format": "double",
                    "type": "number"
                },
                "fromDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "fromLat": {
                    "format": "double",
                    "type": "number"
                },
                "toState": {
                    "type": "string"
                },
                "fromPincode": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "fromBound": {
                    "$ref": "#/definitions/Bound"
                },
                "fromCountry": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "fromWard": {
                    "type": "string"
                },
                "OrganizationId": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "ListPassRes": {
            "required": [
                "passes"
            ],
            "type": "object",
            "properties": {
                "passes": {
                    "items": {
                        "$ref": "#/definitions/PassT"
                    },
                    "type": "array"
                }
            }
        },
        "LoginRes": {
            "required": [
                "registrationToken"
            ],
            "type": "object",
            "properties": {
                "registrationToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/UserT"
                },
                "customer": {
                    "$ref": "#/definitions/CustomerT"
                }
            }
        },
        "OrganizationRes": {
            "required": [
                "organization"
            ],
            "type": "object",
            "properties": {
                "organization": {
                    "$ref": "#/definitions/OrganizationT"
                }
            }
        },
        "Bound": {
            "type": "null"
        },
        "CreateReq": {
            "required": [
                "CommentedOnEntityId",
                "commentedOnEntityType",
                "comment"
            ],
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "commentedOnEntityType": {
                    "type": "string"
                },
                "CommentedOnEntityId": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                }
            }
        },
        "Location": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/LocationType"
                },
                "ward": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "pincode": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "bound": {
                    "$ref": "#/definitions/Bound"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "long": {
                    "format": "double",
                    "type": "number"
                },
                "lat": {
                    "format": "double",
                    "type": "number"
                },
                "district": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                }
            }
        },
        "UpdateRes": {
            "required": [
                "blacklist"
            ],
            "type": "object",
            "properties": {
                "blacklist": {
                    "$ref": "#/definitions/BlacklistT"
                }
            }
        },
        "ListOrganizationRes": {
            "required": [
                "organizations"
            ],
            "type": "object",
            "properties": {
                "organizations": {
                    "items": {
                        "$ref": "#/definitions/OrganizationT"
                    },
                    "type": "array"
                }
            }
        },
        "UserT": {
            "required": [
                "id",
                "OrganizationId",
                "name",
                "username",
                "mobileNumber",
                "email",
                "role",
                "verified",
                "status",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "id": {
                    "type": "string"
                },
                "TenantOrganizationId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/Role"
                },
                "verified": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                },
                "mobileNumber": {
                    "type": "string"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "info": {
                    "type": "string"
                },
                "OrganizationId": {
                    "type": "string"
                }
            }
        },
        "RTEntityType": {
            "type": "string",
            "enum": [
                "CUSTOMER",
                "USER"
            ]
        },
        "PassRes": {
            "required": [
                "pass"
            ],
            "type": "object",
            "properties": {
                "pass": {
                    "$ref": "#/definitions/PassT"
                }
            }
        },
        "Medium": {
            "type": "string",
            "enum": [
                "SMS",
                "EMAIL"
            ]
        },
        "TagEntityRes": {
            "required": [
                "entityTag"
            ],
            "type": "object",
            "properties": {
                "entityTag": {
                    "$ref": "#/definitions/EntityTagT"
                }
            }
        },
        "EntityTagT": {
            "required": [
                "id",
                "EntityId",
                "entityType",
                "TagId",
                "TaggedBy",
                "taggedByEntityId",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "id": {
                    "type": "string"
                },
                "TaggedBy": {
                    "$ref": "#/definitions/RTEntityType"
                },
                "entityType": {
                    "type": "string"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "TagId": {
                    "type": "string"
                },
                "taggedByEntityId": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "EntityId": {
                    "type": "string"
                }
            }
        },
        "CustomerRole": {
            "type": "string",
            "enum": [
                "BUSINESSADMIN",
                "INDIVIDUAL"
            ]
        },
        "CustomerT": {
            "required": [
                "id",
                "verified",
                "role",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "id": {
                    "type": "string"
                },
                "TenantOrganizationId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/CustomerRole"
                },
                "verified": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "info": {
                    "type": "string"
                },
                "OrganizationId": {
                    "type": "string"
                }
            }
        },
        "LocalTime": {
            "example": "2016-07-22T07:40:00",
            "format": "yyyy-mm-ddThh:MM:ss",
            "type": "string"
        },
        "EntityType": {
            "type": "string",
            "enum": [
                "LOCATION",
                "ORG"
            ]
        },
        "LoginType": {
            "type": "string",
            "enum": [
                "OTP",
                "PASSWORD"
            ]
        },
        "InitiateLoginReq": {
            "required": [
                "medium",
                "type",
                "identifier",
                "entityType"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/LoginType"
                },
                "role": {
                    "$ref": "#/definitions/CustomerRole"
                },
                "identifier": {
                    "type": "string"
                },
                "entityType": {
                    "$ref": "#/definitions/RTEntityType"
                },
                "medium": {
                    "$ref": "#/definitions/Medium"
                }
            }
        },
        "QuotaType": {
            "type": "string",
            "enum": [
                "DAILY",
                "HOURLY"
            ]
        },
        "TagT": {
            "required": [
                "id",
                "tagType",
                "tag",
                "CreatedBy",
                "createdByEntityType",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "CreatedBy": {
                    "type": "string"
                },
                "createdByEntityType": {
                    "$ref": "#/definitions/RTEntityType"
                },
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "id": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "tagType": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                }
            }
        },
        "UpdatePassReq": {
            "required": [
                "action"
            ],
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "Ack": {
            "required": [
                "action",
                "message"
            ],
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "CreateOrganizationReq": {
            "required": [
                "name",
                "city",
                "state",
                "country",
                "pincode",
                "address"
            ],
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "pincode": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "gstin": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                }
            }
        },
        "PassType": {
            "type": "string",
            "enum": [
                "INDIVIDUAL",
                "ORGANIZATION"
            ]
        },
        "UpdateOrganizationReq": {
            "required": [
                "status"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "UpdatePassApplicationReq": {
            "required": [
                "status",
                "remarks"
            ],
            "type": "object",
            "properties": {
                "approvedCount": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "remarks": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "Role": {
            "type": "string",
            "enum": [
                "ADMIN",
                "MANAGER",
                "VIEWER"
            ]
        },
        "UpdateReq": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "TenantOrganizationId": {
                    "type": "string"
                },
                "remarks": {
                    "type": "string"
                },
                "entityType": {
                    "$ref": "#/definitions/EntityType"
                },
                "endTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "info": {
                    "type": "string"
                },
                "EntityId": {
                    "type": "string"
                }
            }
        },
        "TagEntityReq": {
            "required": [
                "EntityId",
                "entityType",
                "TagId"
            ],
            "type": "object",
            "properties": {
                "entityType": {
                    "type": "string"
                },
                "TagId": {
                    "type": "string"
                },
                "EntityId": {
                    "type": "string"
                }
            }
        },
        "PassApplicationRes": {
            "required": [
                "passApplication"
            ],
            "type": "object",
            "properties": {
                "passApplication": {
                    "$ref": "#/definitions/PassApplicationT"
                }
            }
        },
        "OrganizationT": {
            "required": [
                "id",
                "name",
                "status",
                "verified",
                "city",
                "state",
                "country",
                "pincode",
                "address",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "ward": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "locationType": {
                    "$ref": "#/definitions/LocationType"
                },
                "id": {
                    "type": "string"
                },
                "pincode": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "bound": {
                    "$ref": "#/definitions/Bound"
                },
                "city": {
                    "type": "string"
                },
                "gstin": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "long": {
                    "format": "double",
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "lat": {
                    "format": "double",
                    "type": "number"
                },
                "district": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                }
            }
        },
        "CommentT": {
            "required": [
                "id",
                "CommentedOnEntityId",
                "commentedOnEntityType",
                "CommentedBy",
                "commentedByEntityType",
                "value",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "id": {
                    "type": "string"
                },
                "commentedByEntityType": {
                    "$ref": "#/definitions/RTEntityType"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "commentedOnEntityType": {
                    "type": "string"
                },
                "CommentedOnEntityId": {
                    "type": "string"
                },
                "CommentedBy": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                }
            }
        },
        "QuotaT": {
            "required": [
                "id",
                "maxAllowed",
                "TenantOrganizationId",
                "quotaType",
                "EntityId",
                "entityType",
                "startTime",
                "endTime",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "startTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "id": {
                    "type": "string"
                },
                "TenantOrganizationId": {
                    "type": "string"
                },
                "maxAllowed": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "entityType": {
                    "$ref": "#/definitions/EntityType"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "endTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "info": {
                    "type": "string"
                },
                "EntityId": {
                    "type": "string"
                },
                "quotaType": {
                    "$ref": "#/definitions/QuotaType"
                }
            }
        },
        "ListPassApplicationRes": {
            "required": [
                "passApplications"
            ],
            "type": "object",
            "properties": {
                "passApplications": {
                    "items": {
                        "$ref": "#/definitions/PassAppInfo"
                    },
                    "type": "array"
                }
            }
        },
        "LocationType": {
            "type": "string",
            "enum": [
                "POINT",
                "POLYGON",
                "PINCODE"
            ]
        },
        "LoginReq": {
            "required": [
                "medium",
                "type",
                "hash",
                "identifier"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/LoginType"
                },
                "identifier": {
                    "type": "string"
                },
                "medium": {
                    "$ref": "#/definitions/Medium"
                },
                "hash": {
                    "type": "string"
                }
            }
        },
        "PassT": {
            "required": [
                "id",
                "ShortId",
                "status",
                "fromDate",
                "toDate",
                "passType",
                "PassApplicationId",
                "CreatedBy",
                "info",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "toWard": {
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "fromAddress": {
                    "type": "string"
                },
                "fromDistrict": {
                    "type": "string"
                },
                "toAddress": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "id": {
                    "type": "string"
                },
                "TenantOrganizationId": {
                    "type": "string"
                },
                "ShortId": {
                    "type": "string"
                },
                "toDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "fromLong": {
                    "format": "double",
                    "type": "number"
                },
                "toCity": {
                    "type": "string"
                },
                "toBound": {
                    "$ref": "#/definitions/Bound"
                },
                "toLong": {
                    "format": "double",
                    "type": "number"
                },
                "CustomerId": {
                    "type": "string"
                },
                "passType": {
                    "$ref": "#/definitions/PassType"
                },
                "fromState": {
                    "type": "string"
                },
                "toPincode": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "fromCity": {
                    "type": "string"
                },
                "toLocationType": {
                    "$ref": "#/definitions/LocationType"
                },
                "fromLocationType": {
                    "$ref": "#/definitions/LocationType"
                },
                "toCountry": {
                    "type": "string"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "toDistrict": {
                    "type": "string"
                },
                "toLat": {
                    "format": "double",
                    "type": "number"
                },
                "fromDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "fromLat": {
                    "format": "double",
                    "type": "number"
                },
                "toState": {
                    "type": "string"
                },
                "fromPincode": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "fromBound": {
                    "$ref": "#/definitions/Bound"
                },
                "fromCountry": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "PassApplicationId": {
                    "type": "string"
                },
                "fromWard": {
                    "type": "string"
                },
                "OrganizationId": {
                    "type": "string"
                }
            }
        },
        "CreateRes": {
            "required": [
                "comment"
            ],
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/definitions/CommentT"
                }
            }
        },
        "PassApplicationType": {
            "type": "string",
            "enum": [
                "SELF",
                "SPONSOR",
                "BULKSPONSOR"
            ]
        },
        "DocumentT": {
            "required": [
                "id",
                "fileUrl",
                "size",
                "fileHash",
                "fileName",
                "format",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "fileUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "size": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "fileHash": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                }
            }
        },
        "ListRes": {
            "required": [
                "comments"
            ],
            "type": "object",
            "properties": {
                "comments": {
                    "items": {
                        "$ref": "#/definitions/CommentT"
                    },
                    "type": "array"
                }
            }
        },
        "GetCustomerRes": {
            "required": [
                "customer"
            ],
            "type": "object",
            "properties": {
                "customer": {
                    "$ref": "#/definitions/CustomerT"
                }
            }
        },
        "PassAppInfo": {
            "required": [
                "id",
                "Tags",
                "Documents",
                "isBlacklistedOrganization",
                "isBlacklistedLocation",
                "status",
                "fromDate",
                "toDate",
                "passType",
                "toLocation",
                "CreatedBy",
                "AssignedTo",
                "count",
                "approvedCount",
                "remarks",
                "info",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "fromLocation": {
                    "$ref": "#/definitions/Location"
                },
                "Organization": {
                    "$ref": "#/definitions/OrganizationT"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "count": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "approvedCount": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "isBlacklistedOrganization": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "TenantOrganizationId": {
                    "type": "string"
                },
                "toDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "Customer": {
                    "$ref": "#/definitions/CustomerT"
                },
                "passType": {
                    "$ref": "#/definitions/PassType"
                },
                "remarks": {
                    "type": "string"
                },
                "isBlacklistedLocation": {
                    "type": "boolean"
                },
                "AssignedTo": {
                    "type": "string"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "fromDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "Documents": {
                    "items": {
                        "$ref": "#/definitions/DocumentT"
                    },
                    "type": "array"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "Tags": {
                    "items": {
                        "$ref": "#/definitions/TagT"
                    },
                    "type": "array"
                },
                "info": {
                    "type": "string"
                },
                "toLocation": {
                    "$ref": "#/definitions/Location"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "TravellerIDType": {
            "type": "string",
            "enum": [
                "MOBILE",
                "AADHAAR"
            ]
        },
        "CreatePassApplicationReq": {
            "required": [
                "fromDate",
                "toDate",
                "toLocation",
                "type"
            ],
            "type": "object",
            "properties": {
                "fromLocation": {
                    "$ref": "#/definitions/Location"
                },
                "count": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/PassApplicationType"
                },
                "TenantOrganizationId": {
                    "type": "string"
                },
                "toDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "CustomerId": {
                    "type": "string"
                },
                "travellerIDType": {
                    "$ref": "#/definitions/TravellerIDType"
                },
                "fromDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "travellerName": {
                    "type": "string"
                },
                "OrganizationId": {
                    "type": "string"
                },
                "travellerID": {
                    "type": "string"
                },
                "toLocation": {
                    "$ref": "#/definitions/Location"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "ReInitiateLoginReq": {
            "required": [
                "medium",
                "type",
                "identifier",
                "entityType"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/LoginType"
                },
                "identifier": {
                    "type": "string"
                },
                "entityType": {
                    "$ref": "#/definitions/RTEntityType"
                },
                "medium": {
                    "$ref": "#/definitions/Medium"
                }
            }
        },
        "BlacklistT": {
            "required": [
                "id",
                "BlacklistedBy",
                "remarks",
                "EntityId",
                "entityType",
                "startTime",
                "endTime",
                "createdAt",
                "updatedAt"
            ],
            "type": "object",
            "properties": {
                "createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "startTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "id": {
                    "type": "string"
                },
                "TenantOrganizationId": {
                    "type": "string"
                },
                "BlacklistedBy": {
                    "type": "string"
                },
                "remarks": {
                    "type": "string"
                },
                "entityType": {
                    "$ref": "#/definitions/EntityType"
                },
                "updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "endTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "info": {
                    "type": "string"
                },
                "EntityId": {
                    "type": "string"
                }
            }
        }
    },
    "paths": {
        "/v1/blacklist/{:id}": {
            "get": {
                "responses": {
                    "404": {
                        "description": "`:id` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlacklistT"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": ":id",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/comment": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CreateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/pass_application/{passApplicationId}": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`passApplicationId` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PassApplicationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "passApplicationId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdatePassApplicationReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "`passApplicationId` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PassApplicationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "passApplicationId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/blacklist": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CreateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/user/{:id}": {
            "get": {
                "responses": {
                    "404": {
                        "description": "`:id` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UserT"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": ":id",
                        "type": "string"
                    }
                ]
            },
            "delete": {
                "responses": {
                    "404": {
                        "description": "`:id` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Ack"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": ":id",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/token/{tokenId}/verify": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`tokenId` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LoginRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "tokenId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/pass/list": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `type` or `offset` or `limit` or `identifier` or `identifierType` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListPassRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "identifierType",
                        "type": "string",
                        "enum": [
                            "MOBILENUMBER",
                            "CUSTOMERID",
                            "PASSAPPLICATIONID",
                            "ORGANIZATIONID"
                        ]
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "identifier",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "type",
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "ORGANIZATION"
                        ]
                    }
                ]
            }
        },
        "/v1/pass_application/list": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `type` or `organization` or `status` or `to_state` or `to_ward` or `to_district` or `to_city` or `to_pincode` or `from_state` or `from_ward` or `from_district` or `from_city` or `from_pincode` or `offset` or `limit` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListPassApplicationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "items": {
                            "maximum": 9223372036854775807,
                            "minimum": -9223372036854775808,
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "from_pincode",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "from_city",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "from_district",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "from_ward",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "from_state",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "maximum": 9223372036854775807,
                            "minimum": -9223372036854775808,
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "to_pincode",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "to_city",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "to_district",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "to_ward",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "to_state",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string",
                            "enum": [
                                "PENDING",
                                "APPROVED",
                                "REJECTED",
                                "EXPIRED",
                                "REVOKED"
                            ]
                        },
                        "in": "query",
                        "name": "status",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "organization",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string",
                            "enum": [
                                "INDIVIDUAL",
                                "ORGANIZATION"
                            ]
                        },
                        "in": "query",
                        "name": "type",
                        "collectionFormat": "multi",
                        "type": "array"
                    }
                ]
            }
        },
        "/v1/organization/list": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `verified` or `status` or `state` or `ward` or `district` or `city` or `pincode` or `locationType` or `offset` or `limit` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListOrganizationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "items": {
                            "type": "string",
                            "enum": [
                                "POINT",
                                "POLYGON",
                                "PINCODE"
                            ]
                        },
                        "in": "query",
                        "name": "locationType",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "maximum": 9223372036854775807,
                            "minimum": -9223372036854775808,
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "pincode",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "city",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "district",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "ward",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "state",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string",
                            "enum": [
                                "PENDING_VERIFICATION",
                                "APPROVED",
                                "REJECTED"
                            ]
                        },
                        "in": "query",
                        "name": "status",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "required": false,
                        "in": "query",
                        "name": "verified",
                        "type": "boolean"
                    }
                ]
            }
        },
        "/v1/tag/entity": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TagEntityRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TagEntityReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/blacklist/{blacklist_id}": {
            "put": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`blacklist_id` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UpdateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "blacklist_id",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/quota/list": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `entityId` or `entityType` or `offset` or `limit` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "entityType",
                        "type": "string",
                        "enum": [
                            "LOCATION",
                            "ORG"
                        ]
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "entityId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/organization": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/OrganizationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateOrganizationReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/token": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/InitiateLoginRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitiateLoginReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/comment/{primaryEntityType}/{primaryEntityId}/list": {
            "get": {
                "responses": {
                    "404": {
                        "description": "`primaryEntityType` or `primaryEntityId` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "primaryEntityType",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "primaryEntityId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/blacklist/list": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `entityId` or `entityType` or `offset` or `limit` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "entityType",
                        "type": "string",
                        "enum": [
                            "LOCATION",
                            "ORG"
                        ]
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "entityId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/token/{tokenId}/resend": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`tokenId` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/InitiateLoginRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "tokenId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReInitiateLoginReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/quota/{:id}": {
            "get": {
                "responses": {
                    "404": {
                        "description": "`:id` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/QuotaT"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": ":id",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/tag": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CreateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/tag/{entityType}/{entityId}/list": {
            "get": {
                "responses": {
                    "404": {
                        "description": "`entityType` or `entityId` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "entityType",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "entityId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1": {
            "get": {
                "responses": {
                    "200": {
                        "schema": {
                            "type": "string"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ]
            }
        },
        "/v1/pass_application": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PassApplicationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePassApplicationReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/user/list": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `offset` or `limit` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    }
                ]
            }
        },
        "/v1/pass/{passId}": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`passId` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PassRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "passId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdatePassReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "`passId` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PassRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "passId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/organization/{organizationId}": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`organizationId` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/OrganizationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "organizationId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateOrganizationReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "`organizationId` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/OrganizationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "organizationId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/customer/{customerId}": {
            "get": {
                "responses": {
                    "404": {
                        "description": "`customerId` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetCustomerRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "customerId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/user/{userId}": {
            "put": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`userId` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UpdateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "userId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/quota/{quotaId}": {
            "put": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`quotaId` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UpdateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "quotaId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/user": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CreateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/blacklist/{id}": {
            "delete": {
                "responses": {
                    "404": {
                        "description": "`id` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Ack"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "id",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/quota": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CreateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        }
    }
}