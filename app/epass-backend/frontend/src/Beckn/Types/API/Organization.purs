-- File auto generated by purescript-bridge! --
module Beckn.Types.API.Organization where

import Beckn.Types.Storage.Organization (OrganizationT, Status)
import Data.Functor.Identity (Identity)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (Array, Int, String)

import Prelude
import Data.Generic (class Generic)

newtype CreateOrganizationReq =
    CreateOrganizationReq {
      _name :: String
    , _gstin :: Maybe String
    , _city :: String
    , _state :: String
    , _country :: String
    , _pincode :: Int
    , _address :: String
    }

derive instance genericCreateOrganizationReq :: Generic CreateOrganizationReq
derive instance newtypeCreateOrganizationReq :: Newtype CreateOrganizationReq _

--------------------------------------------------------------------------------
_CreateOrganizationReq :: Iso' CreateOrganizationReq { _name :: String, _gstin :: Maybe String, _city :: String, _state :: String, _country :: String, _pincode :: Int, _address :: String}
_CreateOrganizationReq = _Newtype

name :: Lens' CreateOrganizationReq String
name = _Newtype <<< prop (SProxy :: SProxy "_name")

gstin :: Lens' CreateOrganizationReq (Maybe String)
gstin = _Newtype <<< prop (SProxy :: SProxy "_gstin")

city :: Lens' CreateOrganizationReq String
city = _Newtype <<< prop (SProxy :: SProxy "_city")

state :: Lens' CreateOrganizationReq String
state = _Newtype <<< prop (SProxy :: SProxy "_state")

country :: Lens' CreateOrganizationReq String
country = _Newtype <<< prop (SProxy :: SProxy "_country")

pincode :: Lens' CreateOrganizationReq Int
pincode = _Newtype <<< prop (SProxy :: SProxy "_pincode")

address :: Lens' CreateOrganizationReq String
address = _Newtype <<< prop (SProxy :: SProxy "_address")

--------------------------------------------------------------------------------
newtype OrganizationRes =
    OrganizationRes {
      organization :: OrganizationT Identity
    }

derive instance genericOrganizationRes :: Generic OrganizationRes
derive instance newtypeOrganizationRes :: Newtype OrganizationRes _

--------------------------------------------------------------------------------
_OrganizationRes :: Iso' OrganizationRes { organization :: OrganizationT Identity}
_OrganizationRes = _Newtype

--------------------------------------------------------------------------------
newtype ListOrganizationReq =
    ListOrganizationReq {
      _limit :: Int
    , _offset :: Int
    , __type :: String
    }

derive instance genericListOrganizationReq :: Generic ListOrganizationReq
derive instance newtypeListOrganizationReq :: Newtype ListOrganizationReq _

--------------------------------------------------------------------------------
_ListOrganizationReq :: Iso' ListOrganizationReq { _limit :: Int, _offset :: Int, __type :: String}
_ListOrganizationReq = _Newtype

limit :: Lens' ListOrganizationReq Int
limit = _Newtype <<< prop (SProxy :: SProxy "_limit")

offset :: Lens' ListOrganizationReq Int
offset = _Newtype <<< prop (SProxy :: SProxy "_offset")

_type :: Lens' ListOrganizationReq String
_type = _Newtype <<< prop (SProxy :: SProxy "__type")

--------------------------------------------------------------------------------
newtype ListOrganizationRes =
    ListOrganizationRes {
      _organizations :: Array OrgInfo
    }

derive instance genericListOrganizationRes :: Generic ListOrganizationRes
derive instance newtypeListOrganizationRes :: Newtype ListOrganizationRes _

--------------------------------------------------------------------------------
_ListOrganizationRes :: Iso' ListOrganizationRes { _organizations :: Array OrgInfo}
_ListOrganizationRes = _Newtype

organizations :: Lens' ListOrganizationRes (Array OrgInfo)
organizations = _Newtype <<< prop (SProxy :: SProxy "_organizations")

--------------------------------------------------------------------------------
newtype UpdateOrganizationReq =
    UpdateOrganizationReq {
      _status :: Status
    }

derive instance genericUpdateOrganizationReq :: Generic UpdateOrganizationReq
derive instance newtypeUpdateOrganizationReq :: Newtype UpdateOrganizationReq _

--------------------------------------------------------------------------------
_UpdateOrganizationReq :: Iso' UpdateOrganizationReq { _status :: Status}
_UpdateOrganizationReq = _Newtype

status :: Lens' UpdateOrganizationReq Status
status = _Newtype <<< prop (SProxy :: SProxy "_status")

--------------------------------------------------------------------------------
