-- File auto generated by purescript-bridge! --
module Beckn.Types.API.Pass where

import Beckn.Types.Common (PassIDType, PassType)
import Beckn.Types.Storage.Pass (PassT, Status)
import Data.Functor.Identity (Identity)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (Array, Int, String)

import Prelude
import Data.Generic (class Generic)

newtype PassRes =
    PassRes {
      pass :: PassT Identity
    }

derive instance genericPassRes :: Generic PassRes
derive instance newtypePassRes :: Newtype PassRes _

--------------------------------------------------------------------------------
_PassRes :: Iso' PassRes { pass :: PassT Identity}
_PassRes = _Newtype

--------------------------------------------------------------------------------
newtype UpdatePassReq =
    UpdatePassReq {
      action :: Status
    }

derive instance genericUpdatePassReq :: Generic UpdatePassReq
derive instance newtypeUpdatePassReq :: Newtype UpdatePassReq _

--------------------------------------------------------------------------------
_UpdatePassReq :: Iso' UpdatePassReq { action :: Status}
_UpdatePassReq = _Newtype

--------------------------------------------------------------------------------
newtype ListPassReq =
    ListPassReq {
      _identifierType :: PassIDType
    , _identifier :: String
    , _limit :: Int
    , _offset :: Int
    , __type :: PassType
    }

derive instance genericListPassReq :: Generic ListPassReq
derive instance newtypeListPassReq :: Newtype ListPassReq _

--------------------------------------------------------------------------------
_ListPassReq :: Iso' ListPassReq { _identifierType :: PassIDType, _identifier :: String, _limit :: Int, _offset :: Int, __type :: PassType}
_ListPassReq = _Newtype

identifierType :: Lens' ListPassReq PassIDType
identifierType = _Newtype <<< prop (SProxy :: SProxy "_identifierType")

identifier :: Lens' ListPassReq String
identifier = _Newtype <<< prop (SProxy :: SProxy "_identifier")

limit :: Lens' ListPassReq Int
limit = _Newtype <<< prop (SProxy :: SProxy "_limit")

offset :: Lens' ListPassReq Int
offset = _Newtype <<< prop (SProxy :: SProxy "_offset")

_type :: Lens' ListPassReq PassType
_type = _Newtype <<< prop (SProxy :: SProxy "__type")

--------------------------------------------------------------------------------
newtype ListPassRes =
    ListPassRes {
      passes :: Array (PassT Identity)
    }

derive instance genericListPassRes :: Generic ListPassRes
derive instance newtypeListPassRes :: Newtype ListPassRes _

--------------------------------------------------------------------------------
_ListPassRes :: Iso' ListPassRes { passes :: Array (PassT Identity)}
_ListPassRes = _Newtype

--------------------------------------------------------------------------------
