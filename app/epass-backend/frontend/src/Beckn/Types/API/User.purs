-- File auto generated by purescript-bridge! --
module Beckn.Types.API.User where

import Beckn.Types.App (OrganizationId, TenantOrganizationId)
import Beckn.Types.Storage.User (Role, Status, UserT)
import Data.Functor.Identity (Identity)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (Array, String)

import Prelude
import Data.Generic (class Generic)

newtype UpdateReq =
    UpdateReq {
      _name :: Maybe String
    , _email :: Maybe String
    , _role :: Maybe Role
    , _status :: Status
    }

derive instance genericUpdateReq :: Generic UpdateReq
derive instance newtypeUpdateReq :: Newtype UpdateReq _

--------------------------------------------------------------------------------
_UpdateReq :: Iso' UpdateReq { _name :: Maybe String, _email :: Maybe String, _role :: Maybe Role, _status :: Status}
_UpdateReq = _Newtype

name :: Lens' UpdateReq (Maybe String)
name = _Newtype <<< prop (SProxy :: SProxy "_name")

email :: Lens' UpdateReq (Maybe String)
email = _Newtype <<< prop (SProxy :: SProxy "_email")

role :: Lens' UpdateReq (Maybe Role)
role = _Newtype <<< prop (SProxy :: SProxy "_role")

status :: Lens' UpdateReq Status
status = _Newtype <<< prop (SProxy :: SProxy "_status")

--------------------------------------------------------------------------------
newtype UpdateRes =
    UpdateRes {
      _user :: UserT Identity
    }

derive instance genericUpdateRes :: Generic UpdateRes
derive instance newtypeUpdateRes :: Newtype UpdateRes _

--------------------------------------------------------------------------------
_UpdateRes :: Iso' UpdateRes { _user :: UserT Identity}
_UpdateRes = _Newtype

user :: Lens' UpdateRes (UserT Identity)
user = _Newtype <<< prop (SProxy :: SProxy "_user")

--------------------------------------------------------------------------------
newtype ListRes =
    ListRes {
      _users :: Array (UserT Identity)
    }

derive instance genericListRes :: Generic ListRes
derive instance newtypeListRes :: Newtype ListRes _

--------------------------------------------------------------------------------
_ListRes :: Iso' ListRes { _users :: Array (UserT Identity)}
_ListRes = _Newtype

users :: Lens' ListRes (Array (UserT Identity))
users = _Newtype <<< prop (SProxy :: SProxy "_users")

--------------------------------------------------------------------------------
newtype CreateReq =
    CreateReq {
      _name :: String
    , _username :: String
    , _email :: String
    , _mobileNumber :: String
    , _info :: Maybe String
    , _role :: Role
    , _LocationId :: String
    , _OrganizationId :: OrganizationId
    , _TenantOrganizationId :: Maybe TenantOrganizationId
    }

derive instance genericCreateReq :: Generic CreateReq
derive instance newtypeCreateReq :: Newtype CreateReq _

--------------------------------------------------------------------------------
_CreateReq :: Iso' CreateReq { _name :: String, _username :: String, _email :: String, _mobileNumber :: String, _info :: Maybe String, _role :: Role, _LocationId :: String, _OrganizationId :: OrganizationId, _TenantOrganizationId :: Maybe TenantOrganizationId}
_CreateReq = _Newtype

name :: Lens' CreateReq String
name = _Newtype <<< prop (SProxy :: SProxy "_name")

username :: Lens' CreateReq String
username = _Newtype <<< prop (SProxy :: SProxy "_username")

email :: Lens' CreateReq String
email = _Newtype <<< prop (SProxy :: SProxy "_email")

mobileNumber :: Lens' CreateReq String
mobileNumber = _Newtype <<< prop (SProxy :: SProxy "_mobileNumber")

info :: Lens' CreateReq (Maybe String)
info = _Newtype <<< prop (SProxy :: SProxy "_info")

role :: Lens' CreateReq Role
role = _Newtype <<< prop (SProxy :: SProxy "_role")

LocationId :: Lens' CreateReq String
LocationId = _Newtype <<< prop (SProxy :: SProxy "_LocationId")

OrganizationId :: Lens' CreateReq OrganizationId
OrganizationId = _Newtype <<< prop (SProxy :: SProxy "_OrganizationId")

TenantOrganizationId :: Lens' CreateReq (Maybe TenantOrganizationId)
TenantOrganizationId = _Newtype <<< prop (SProxy :: SProxy "_TenantOrganizationId")

--------------------------------------------------------------------------------
