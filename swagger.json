{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "Epass API",
        "license": {
            "url": "http://mit.com",
            "name": "MIT"
        },
        "description": "This is an API document for beckn epas"
    },
    "definitions": {
        "Status": {
            "type": "string",
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "InitiateLoginRes": {
            "required": [
                "tokenId",
                "attempts"
            ],
            "type": "object",
            "properties": {
                "tokenId": {
                    "type": "string"
                },
                "attempts": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                }
            }
        },
        "PassApplicationT": {
            "required": [
                "_id",
                "_status",
                "_fromDate",
                "_toDate",
                "_type",
                "_CreatedBy",
                "_AssignedTo",
                "_count",
                "_approvedCount",
                "_remarks",
                "_info",
                "_createdAt",
                "_updatedAt"
            ],
            "type": "object",
            "properties": {
                "_toWard": {
                    "type": "string"
                },
                "_CreatedBy": {
                    "type": "string"
                },
                "_count": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "_type": {
                    "$ref": "#/definitions/PassType"
                },
                "_approvedCount": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "_fromAddress": {
                    "type": "string"
                },
                "_fromDistrict": {
                    "type": "string"
                },
                "_toAddress": {
                    "type": "string"
                },
                "_createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_id": {
                    "type": "string"
                },
                "_TenantOrganizationId": {
                    "type": "string"
                },
                "_toDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_fromLong": {
                    "format": "double",
                    "type": "number"
                },
                "_toCity": {
                    "type": "string"
                },
                "_toBound": {
                    "$ref": "#/definitions/Bound"
                },
                "_toLong": {
                    "format": "double",
                    "type": "number"
                },
                "_CustomerId": {
                    "type": "string"
                },
                "_fromState": {
                    "type": "string"
                },
                "_toPincode": {
                    "type": "string"
                },
                "_remarks": {
                    "type": "string"
                },
                "_fromCity": {
                    "type": "string"
                },
                "_toLocationType": {
                    "$ref": "#/definitions/LocationType"
                },
                "_fromLocationType": {
                    "$ref": "#/definitions/LocationType"
                },
                "_AssignedTo": {
                    "type": "string"
                },
                "_toCountry": {
                    "type": "string"
                },
                "_updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_toDistrict": {
                    "type": "string"
                },
                "_toLat": {
                    "format": "double",
                    "type": "number"
                },
                "_fromDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_fromLat": {
                    "format": "double",
                    "type": "number"
                },
                "_toState": {
                    "type": "string"
                },
                "_fromPincode": {
                    "type": "string"
                },
                "_status": {
                    "$ref": "#/definitions/Status"
                },
                "_fromBound": {
                    "$ref": "#/definitions/Bound"
                },
                "_fromCountry": {
                    "type": "string"
                },
                "_info": {
                    "type": "string"
                },
                "_fromWard": {
                    "type": "string"
                },
                "_OrganizationId": {
                    "type": "string"
                }
            }
        },
        "ListPassRes": {
            "required": [
                "passes"
            ],
            "type": "object",
            "properties": {
                "passes": {
                    "items": {
                        "$ref": "#/definitions/PassT"
                    },
                    "type": "array"
                }
            }
        },
        "LoginRes": {
            "required": [
                "registrationToken",
                "customer"
            ],
            "type": "object",
            "properties": {
                "registrationToken": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/CustomerT"
                }
            }
        },
        "OrganizationRes": {
            "required": [
                "organization"
            ],
            "type": "object",
            "properties": {
                "organization": {
                    "$ref": "#/definitions/OrganizationT"
                }
            }
        },
        "Bound": {
            "type": "null"
        },
        "CreateReq": {
            "required": [
                "_remarks",
                "_EntityId",
                "_entityType",
                "_startTime",
                "_endTime"
            ],
            "type": "object",
            "properties": {
                "_startTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_TenantOrganizationId": {
                    "type": "string"
                },
                "_remarks": {
                    "type": "string"
                },
                "_entityType": {
                    "$ref": "#/definitions/EntityType"
                },
                "_endTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_info": {
                    "type": "string"
                },
                "_EntityId": {
                    "type": "string"
                }
            }
        },
        "Location": {
            "required": [
                "_type"
            ],
            "type": "object",
            "properties": {
                "_type": {
                    "$ref": "#/definitions/LocationType"
                },
                "_ward": {
                    "type": "string"
                },
                "_country": {
                    "type": "string"
                },
                "_pincode": {
                    "type": "string"
                },
                "_bound": {
                    "$ref": "#/definitions/Bound"
                },
                "_city": {
                    "type": "string"
                },
                "_state": {
                    "type": "string"
                },
                "_long": {
                    "format": "double",
                    "type": "number"
                },
                "_lat": {
                    "format": "double",
                    "type": "number"
                },
                "_district": {
                    "type": "string"
                },
                "_address": {
                    "type": "string"
                }
            }
        },
        "UpdateRes": {
            "required": [
                "_blacklist"
            ],
            "type": "object",
            "properties": {
                "_blacklist": {
                    "$ref": "#/definitions/BlacklistT"
                }
            }
        },
        "ListOrganizationRes": {
            "required": [
                "organizations"
            ],
            "type": "object",
            "properties": {
                "organizations": {
                    "items": {
                        "$ref": "#/definitions/OrganizationT"
                    },
                    "type": "array"
                }
            }
        },
        "UserT": {
            "required": [
                "_id",
                "_OrganizationId",
                "_name",
                "_username",
                "_mobileNumber",
                "_email",
                "_role",
                "_verified",
                "_status",
                "_createdAt",
                "_updatedAt"
            ],
            "type": "object",
            "properties": {
                "_createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_id": {
                    "type": "string"
                },
                "_TenantOrganizationId": {
                    "type": "string"
                },
                "_name": {
                    "type": "string"
                },
                "_email": {
                    "type": "string"
                },
                "_role": {
                    "$ref": "#/definitions/Role"
                },
                "_verified": {
                    "type": "boolean"
                },
                "_username": {
                    "type": "string"
                },
                "_mobileNumber": {
                    "type": "string"
                },
                "_updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_status": {
                    "$ref": "#/definitions/Status"
                },
                "_info": {
                    "type": "string"
                },
                "_OrganizationId": {
                    "type": "string"
                }
            }
        },
        "PassRes": {
            "required": [
                "pass"
            ],
            "type": "object",
            "properties": {
                "pass": {
                    "$ref": "#/definitions/PassT"
                }
            }
        },
        "Medium": {
            "type": "string",
            "enum": [
                "SMS",
                "EMAIL"
            ]
        },
        "CustomerRole": {
            "type": "string",
            "enum": [
                "BUSINESSADMIN",
                "INDIVIDUAL"
            ]
        },
        "CustomerT": {
            "required": [
                "_id",
                "_verified",
                "_role",
                "_createdAt",
                "_updatedAt"
            ],
            "type": "object",
            "properties": {
                "_createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_id": {
                    "type": "string"
                },
                "_TenantOrganizationId": {
                    "type": "string"
                },
                "_name": {
                    "type": "string"
                },
                "_role": {
                    "$ref": "#/definitions/CustomerRole"
                },
                "_verified": {
                    "type": "boolean"
                },
                "_updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_info": {
                    "type": "string"
                },
                "_OrganizationId": {
                    "type": "string"
                }
            }
        },
        "LocalTime": {
            "example": "2016-07-22T07:40:00",
            "format": "yyyy-mm-ddThh:MM:ss",
            "type": "string"
        },
        "EntityType": {
            "type": "string",
            "enum": [
                "LOCATION",
                "ORG"
            ]
        },
        "LoginType": {
            "type": "string",
            "enum": [
                "OTP",
                "PASSWORD"
            ]
        },
        "InitiateLoginReq": {
            "required": [
                "_medium",
                "__type",
                "__value",
                "_role"
            ],
            "type": "object",
            "properties": {
                "__type": {
                    "$ref": "#/definitions/LoginType"
                },
                "_role": {
                    "$ref": "#/definitions/CustomerRole"
                },
                "_medium": {
                    "$ref": "#/definitions/Medium"
                },
                "__value": {
                    "type": "string"
                }
            }
        },
        "QuotaType": {
            "type": "string",
            "enum": [
                "DAILY",
                "HOURLY"
            ]
        },
        "UpdatePassReq": {
            "required": [
                "action"
            ],
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "Ack": {
            "required": [
                "_action",
                "_message"
            ],
            "type": "object",
            "properties": {
                "_action": {
                    "type": "string"
                },
                "_message": {
                    "type": "string"
                }
            }
        },
        "CreateOrganizationReq": {
            "required": [
                "_name",
                "_city",
                "_state",
                "_country",
                "_pincode",
                "_address"
            ],
            "type": "object",
            "properties": {
                "_country": {
                    "type": "string"
                },
                "_pincode": {
                    "type": "string"
                },
                "_city": {
                    "type": "string"
                },
                "_gstin": {
                    "type": "string"
                },
                "_name": {
                    "type": "string"
                },
                "_state": {
                    "type": "string"
                },
                "_address": {
                    "type": "string"
                }
            }
        },
        "PassType": {
            "type": "string",
            "enum": [
                "INDIVIDUAL",
                "ORGANIZATION"
            ]
        },
        "UpdateOrganizationReq": {
            "required": [
                "status"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "UpdatePassApplicationReq": {
            "required": [
                "_status",
                "_approvedCount",
                "_remarks"
            ],
            "type": "object",
            "properties": {
                "_approvedCount": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "_remarks": {
                    "type": "string"
                },
                "_status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "Role": {
            "type": "string",
            "enum": [
                "ADMIN",
                "MANAGER",
                "VIEWER"
            ]
        },
        "UpdateReq": {
            "type": "object",
            "properties": {
                "_startTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_TenantOrganizationId": {
                    "type": "string"
                },
                "_remarks": {
                    "type": "string"
                },
                "_entityType": {
                    "$ref": "#/definitions/EntityType"
                },
                "_endTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_info": {
                    "type": "string"
                },
                "_EntityId": {
                    "type": "string"
                }
            }
        },
        "PassApplicationRes": {
            "required": [
                "passApplication"
            ],
            "type": "object",
            "properties": {
                "passApplication": {
                    "$ref": "#/definitions/PassApplicationT"
                }
            }
        },
        "OrganizationT": {
            "required": [
                "_id",
                "_name",
                "_status",
                "_verified",
                "_city",
                "_state",
                "_country",
                "_pincode",
                "_address",
                "_createdAt",
                "_updatedAt"
            ],
            "type": "object",
            "properties": {
                "_ward": {
                    "type": "string"
                },
                "_country": {
                    "type": "string"
                },
                "_createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_locationType": {
                    "$ref": "#/definitions/LocationType"
                },
                "_id": {
                    "type": "string"
                },
                "_pincode": {
                    "type": "string"
                },
                "_bound": {
                    "$ref": "#/definitions/Bound"
                },
                "_city": {
                    "type": "string"
                },
                "_gstin": {
                    "type": "string"
                },
                "_name": {
                    "type": "string"
                },
                "_state": {
                    "type": "string"
                },
                "_verified": {
                    "type": "boolean"
                },
                "_updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_long": {
                    "format": "double",
                    "type": "number"
                },
                "_status": {
                    "$ref": "#/definitions/Status"
                },
                "_lat": {
                    "format": "double",
                    "type": "number"
                },
                "_district": {
                    "type": "string"
                },
                "_info": {
                    "type": "string"
                },
                "_address": {
                    "type": "string"
                }
            }
        },
        "QuotaT": {
            "required": [
                "_id",
                "_maxAllowed",
                "_type",
                "_EntityId",
                "_entityType",
                "_startTime",
                "_endTime",
                "_createdAt",
                "_updatedAt"
            ],
            "type": "object",
            "properties": {
                "_type": {
                    "$ref": "#/definitions/QuotaType"
                },
                "_createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_startTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_id": {
                    "type": "string"
                },
                "_maxAllowed": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "_entityType": {
                    "$ref": "#/definitions/EntityType"
                },
                "_updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_endTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_info": {
                    "type": "string"
                },
                "_EntityId": {
                    "type": "string"
                }
            }
        },
        "ListPassApplicationRes": {
            "required": [
                "passApplications"
            ],
            "type": "object",
            "properties": {
                "passApplications": {
                    "items": {
                        "$ref": "#/definitions/PassApplicationT"
                    },
                    "type": "array"
                }
            }
        },
        "LocationType": {
            "type": "string",
            "enum": [
                "POINT",
                "POLYGON",
                "PINCODE"
            ]
        },
        "LoginReq": {
            "required": [
                "_medium",
                "__type",
                "__value",
                "_hash"
            ],
            "type": "object",
            "properties": {
                "__type": {
                    "$ref": "#/definitions/LoginType"
                },
                "_medium": {
                    "$ref": "#/definitions/Medium"
                },
                "_hash": {
                    "type": "string"
                },
                "__value": {
                    "type": "string"
                }
            }
        },
        "PassT": {
            "required": [
                "_id",
                "_ShortId",
                "_status",
                "_fromDate",
                "_toDate",
                "_type",
                "_PassApplicationId",
                "_CreatedBy",
                "_info",
                "_createdAt",
                "_updatedAt"
            ],
            "type": "object",
            "properties": {
                "_toWard": {
                    "type": "string"
                },
                "_CreatedBy": {
                    "type": "string"
                },
                "_type": {
                    "$ref": "#/definitions/PassType"
                },
                "_fromAddress": {
                    "type": "string"
                },
                "_fromDistrict": {
                    "type": "string"
                },
                "_toAddress": {
                    "type": "string"
                },
                "_createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_id": {
                    "type": "string"
                },
                "_TenantOrganizationId": {
                    "type": "string"
                },
                "_ShortId": {
                    "type": "string"
                },
                "_toDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_fromLong": {
                    "format": "double",
                    "type": "number"
                },
                "_toCity": {
                    "type": "string"
                },
                "_toBound": {
                    "$ref": "#/definitions/Bound"
                },
                "_toLong": {
                    "format": "double",
                    "type": "number"
                },
                "_CustomerId": {
                    "type": "string"
                },
                "_fromState": {
                    "type": "string"
                },
                "_toPincode": {
                    "type": "string"
                },
                "_fromCity": {
                    "type": "string"
                },
                "_toLocationType": {
                    "$ref": "#/definitions/LocationType"
                },
                "_fromLocationType": {
                    "$ref": "#/definitions/LocationType"
                },
                "_toCountry": {
                    "type": "string"
                },
                "_updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_toDistrict": {
                    "type": "string"
                },
                "_toLat": {
                    "format": "double",
                    "type": "number"
                },
                "_fromDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_fromLat": {
                    "format": "double",
                    "type": "number"
                },
                "_toState": {
                    "type": "string"
                },
                "_fromPincode": {
                    "type": "string"
                },
                "_status": {
                    "$ref": "#/definitions/Status"
                },
                "_fromBound": {
                    "$ref": "#/definitions/Bound"
                },
                "_fromCountry": {
                    "type": "string"
                },
                "_info": {
                    "type": "string"
                },
                "_PassApplicationId": {
                    "type": "string"
                },
                "_fromWard": {
                    "type": "string"
                },
                "_OrganizationId": {
                    "type": "string"
                }
            }
        },
        "CreateRes": {
            "required": [
                "_blacklist"
            ],
            "type": "object",
            "properties": {
                "_blacklist": {
                    "$ref": "#/definitions/BlacklistT"
                }
            }
        },
        "PassApplicationType": {
            "type": "string",
            "enum": [
                "SELF",
                "SPONSOROR",
                "BULKSPONSOROR"
            ]
        },
        "ListRes": {
            "required": [
                "_blacklists"
            ],
            "type": "object",
            "properties": {
                "_blacklists": {
                    "items": {
                        "$ref": "#/definitions/BlacklistT"
                    },
                    "type": "array"
                }
            }
        },
        "GetCustomerRes": {
            "required": [
                "customer"
            ],
            "type": "object",
            "properties": {
                "customer": {
                    "$ref": "#/definitions/CustomerT"
                }
            }
        },
        "TravellerIDType": {
            "type": "string",
            "enum": [
                "MOBILE",
                "AADHAR"
            ]
        },
        "CreatePassApplicationReq": {
            "required": [
                "_fromDate",
                "_toDate",
                "_toLocation",
                "_type"
            ],
            "type": "object",
            "properties": {
                "_fromLocation": {
                    "$ref": "#/definitions/Location"
                },
                "_count": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "_type": {
                    "$ref": "#/definitions/PassApplicationType"
                },
                "_TenantOrganizationId": {
                    "type": "string"
                },
                "_toDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_CustomerId": {
                    "type": "string"
                },
                "_travellerIDType": {
                    "$ref": "#/definitions/TravellerIDType"
                },
                "_fromDate": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_travellerName": {
                    "type": "string"
                },
                "_OrganizationId": {
                    "type": "string"
                },
                "_travellerID": {
                    "type": "string"
                },
                "_toLocation": {
                    "$ref": "#/definitions/Location"
                }
            }
        },
        "ReInitiateLoginReq": {
            "required": [
                "_medium",
                "__type",
                "__value"
            ],
            "type": "object",
            "properties": {
                "__type": {
                    "$ref": "#/definitions/LoginType"
                },
                "_medium": {
                    "$ref": "#/definitions/Medium"
                },
                "__value": {
                    "type": "string"
                }
            }
        },
        "BlacklistT": {
            "required": [
                "_id",
                "_BlacklistedBy",
                "_remarks",
                "_EntityId",
                "_entityType",
                "_startTime",
                "_endTime",
                "_createdAt",
                "_updatedAt"
            ],
            "type": "object",
            "properties": {
                "_createdAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_startTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_id": {
                    "type": "string"
                },
                "_TenantOrganizationId": {
                    "type": "string"
                },
                "_BlacklistedBy": {
                    "type": "string"
                },
                "_remarks": {
                    "type": "string"
                },
                "_entityType": {
                    "$ref": "#/definitions/EntityType"
                },
                "_updatedAt": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_endTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "_info": {
                    "type": "string"
                },
                "_EntityId": {
                    "type": "string"
                }
            }
        }
    },
    "paths": {
        "/v1/blacklist/{:id}": {
            "get": {
                "responses": {
                    "404": {
                        "description": "`:id` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlacklistT"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": ":id",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/blacklist": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CreateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/user/{:id}": {
            "get": {
                "responses": {
                    "404": {
                        "description": "`:id` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UserT"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": ":id",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/token/{tokenId}/verify": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`tokenId` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LoginRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "tokenId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/passApplication/{passApplicationId}": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`passApplicationId` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PassApplicationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "passApplicationId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdatePassApplicationReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "`passApplicationId` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PassApplicationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "passApplicationId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/pass/list": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `type` or `offset` or `limit` or `identifier` or `identifierType` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListPassRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "identifierType",
                        "type": "string",
                        "enum": [
                            "MOBILENUMBER",
                            "CUSTOMERID",
                            "PASSAPPLICATIONID",
                            "ORGANIZATIONID"
                        ]
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "identifier",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "type",
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "ORGANIZATION"
                        ]
                    }
                ]
            }
        },
        "/v1/passApplication/list": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `type` or `status` or `offset` or `limit` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListPassApplicationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "items": {
                            "type": "string",
                            "enum": [
                                "PENDING",
                                "APPROVED",
                                "REJECTED",
                                "EXPIRED"
                            ]
                        },
                        "in": "query",
                        "name": "status",
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string",
                            "enum": [
                                "INDIVIDUAL",
                                "ORGANIZATION"
                            ]
                        },
                        "in": "query",
                        "name": "type",
                        "collectionFormat": "multi",
                        "type": "array"
                    }
                ]
            }
        },
        "/v1/blacklist/{blacklist_id}": {
            "put": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`blacklist_id` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UpdateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "blacklist_id",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/quota/list": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `entityId` or `entityType` or `offset` or `limit` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "entityType",
                        "type": "string",
                        "enum": [
                            "LOCATION",
                            "ORG"
                        ]
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "entityId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/passApplication": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PassApplicationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePassApplicationReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/organization": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/OrganizationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateOrganizationReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            },
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `type` or `offset` or `limit` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListOrganizationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "required": false,
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/token": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/InitiateLoginRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitiateLoginReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/blacklist/list": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `entityId` or `entityType` or `offset` or `limit` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "entityType",
                        "type": "string",
                        "enum": [
                            "LOCATION",
                            "ORG"
                        ]
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "entityId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/token/{tokenId}/resend": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`tokenId` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/InitiateLoginRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "tokenId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReInitiateLoginReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/quota/{:id}": {
            "get": {
                "responses": {
                    "404": {
                        "description": "`:id` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/QuotaT"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": ":id",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1": {
            "get": {
                "responses": {
                    "200": {
                        "schema": {
                            "type": "string"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ]
            }
        },
        "/v1/user/list": {
            "get": {
                "responses": {
                    "400": {
                        "description": "Invalid `offset` or `limit` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ListRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "required": false,
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    }
                ]
            }
        },
        "/v1/pass/{passId}": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`passId` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PassRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "passId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdatePassReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "`passId` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/PassRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "passId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/organization/{organizationId}": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`organizationId` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/OrganizationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "organizationId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateOrganizationReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "`organizationId` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/OrganizationRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "organizationId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/customer/{customerId}": {
            "get": {
                "responses": {
                    "404": {
                        "description": "`customerId` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetCustomerRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "customerId",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/user/{userId}": {
            "put": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`userId` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UpdateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "userId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/quota/{quotaId}": {
            "put": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`quotaId` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UpdateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "quotaId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/user": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CreateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        },
        "/v1/blacklist/{id}": {
            "delete": {
                "responses": {
                    "404": {
                        "description": "`id` not found"
                    },
                    "400": {
                        "description": "Invalid `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Ack"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "id",
                        "type": "string"
                    }
                ]
            }
        },
        "/v1/quota": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `registrationToken`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CreateRes"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "registrationToken",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateReq"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ]
            }
        }
    }
}