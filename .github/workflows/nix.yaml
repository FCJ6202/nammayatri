name: CI

on:
  push:
    branches: ["main", "prodHotPush-Common"]
  pull_request:
    branches: ["main", "prodHotPush-Common"]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: read
  packages: write

jobs:
  process-labels:
    runs-on: ubuntu-latest
    outputs:
      has-backend: ${{ steps.check-labels.outputs.has_backend }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Apply labels
        uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Check for backend label
        id: check-labels
        run: |
          sleep 5 # Small delay to ensure labels are applied
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels")
          has_backend=$(echo "$response" | jq 'map(select(.name == "backend")) | length > 0')
          echo "has_backend=${has_backend}" >> $GITHUB_OUTPUT
          echo "Label check result: ${has_backend}"

  build:
    needs: [process-labels]
    runs-on: x86_64-linux
    if: needs.process-labels.outputs.has-backend == 'true'
    outputs:
      docker-image-name: ${{ steps.docker.outputs.image_name }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: cachix/cachix-action@v15
        with:
          name: nammayatri
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      
      - name: Build all flake outputs
        run: om ci
      
      - name: Push to cachix
        if: github.ref == 'refs/heads/main'
        run: nix run .#cachix-push
      
      - name: Docker tasks
        id: docker
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/prodHotPush-Common'
        run: |
          nix build .#dockerImage -o docker-image.tgz
          echo "image_name=$(nix eval --raw .#dockerImage.imageName):$(nix eval --raw .#dockerImage.imageTag)" >> $GITHUB_OUTPUT
      
      - name: Upload Docker image tarball
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/prodHotPush-Common'
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: docker-image.tgz

  push-docker:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.ref == 'refs/heads/prodHotPush-Common' && needs.process-labels.outputs.has-backend == 'true')
    steps:
      - name: Download Docker image tarball
        uses: actions/download-artifact@v4
        with:
          name: docker-image
      
      - name: Load and push Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$GITHUB_TOKEN" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker load < docker-image.tgz
          docker push ${{ needs.build.outputs.docker-image-name }}
          docker logout ghcr.io
