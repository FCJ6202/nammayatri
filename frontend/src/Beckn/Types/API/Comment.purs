-- File auto generated by purescript-bridge! --
module Beckn.Types.API.Comment where

import Beckn.Types.Storage.Comment (CommentT)
import Data.Functor.Identity (Identity)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (Array, String)

import Prelude
import Data.Generic (class Generic)

newtype CreateReq =
    CreateReq {
      _CommentedOnEntityId :: String
    , _commentedOnEntityType :: String
    , _comment :: String
    , _info :: Maybe String
    }

derive instance genericCreateReq :: Generic CreateReq
derive instance newtypeCreateReq :: Newtype CreateReq _

--------------------------------------------------------------------------------
_CreateReq :: Iso' CreateReq { _CommentedOnEntityId :: String, _commentedOnEntityType :: String, _comment :: String, _info :: Maybe String}
_CreateReq = _Newtype

CommentedOnEntityId :: Lens' CreateReq String
CommentedOnEntityId = _Newtype <<< prop (SProxy :: SProxy "_CommentedOnEntityId")

commentedOnEntityType :: Lens' CreateReq String
commentedOnEntityType = _Newtype <<< prop (SProxy :: SProxy "_commentedOnEntityType")

comment :: Lens' CreateReq String
comment = _Newtype <<< prop (SProxy :: SProxy "_comment")

info :: Lens' CreateReq (Maybe String)
info = _Newtype <<< prop (SProxy :: SProxy "_info")

--------------------------------------------------------------------------------
newtype CreateRes =
    CreateRes {
      _comment :: CommentT Identity
    }

derive instance genericCreateRes :: Generic CreateRes
derive instance newtypeCreateRes :: Newtype CreateRes _

--------------------------------------------------------------------------------
_CreateRes :: Iso' CreateRes { _comment :: CommentT Identity}
_CreateRes = _Newtype

comment :: Lens' CreateRes (CommentT Identity)
comment = _Newtype <<< prop (SProxy :: SProxy "_comment")

--------------------------------------------------------------------------------
newtype ListRes =
    ListRes {
      _comments :: Array (CommentT Identity)
    }

derive instance genericListRes :: Generic ListRes
derive instance newtypeListRes :: Newtype ListRes _

--------------------------------------------------------------------------------
_ListRes :: Iso' ListRes { _comments :: Array (CommentT Identity)}
_ListRes = _Newtype

comments :: Lens' ListRes (Array (CommentT Identity))
comments = _Newtype <<< prop (SProxy :: SProxy "_comments")

--------------------------------------------------------------------------------
