-- File auto generated by purescript-bridge! --
module Beckn.Types.API.Blacklist where

import Beckn.Types.App (TenantOrganizationId)
import Beckn.Types.Common (EntityType)
import Beckn.Types.Storage.Blacklist (BlacklistT)
import Data.Functor.Identity (Identity)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Data.Time.LocalTime.Internal.LocalTime (LocalTime)
import Prim (Array, String)

import Prelude
import Data.Generic (class Generic)

newtype CreateReq =
    CreateReq {
      _remarks :: String
    , _TenantOrganizationId :: Maybe TenantOrganizationId
    , _EntityId :: String
    , _entityType :: EntityType
    , _startTime :: LocalTime
    , _endTime :: LocalTime
    , _info :: Maybe String
    }

derive instance genericCreateReq :: Generic CreateReq
derive instance newtypeCreateReq :: Newtype CreateReq _

--------------------------------------------------------------------------------
_CreateReq :: Iso' CreateReq { _remarks :: String, _TenantOrganizationId :: Maybe TenantOrganizationId, _EntityId :: String, _entityType :: EntityType, _startTime :: LocalTime, _endTime :: LocalTime, _info :: Maybe String}
_CreateReq = _Newtype

remarks :: Lens' CreateReq String
remarks = _Newtype <<< prop (SProxy :: SProxy "_remarks")

TenantOrganizationId :: Lens' CreateReq (Maybe TenantOrganizationId)
TenantOrganizationId = _Newtype <<< prop (SProxy :: SProxy "_TenantOrganizationId")

EntityId :: Lens' CreateReq String
EntityId = _Newtype <<< prop (SProxy :: SProxy "_EntityId")

entityType :: Lens' CreateReq EntityType
entityType = _Newtype <<< prop (SProxy :: SProxy "_entityType")

startTime :: Lens' CreateReq LocalTime
startTime = _Newtype <<< prop (SProxy :: SProxy "_startTime")

endTime :: Lens' CreateReq LocalTime
endTime = _Newtype <<< prop (SProxy :: SProxy "_endTime")

info :: Lens' CreateReq (Maybe String)
info = _Newtype <<< prop (SProxy :: SProxy "_info")

--------------------------------------------------------------------------------
newtype CreateRes =
    CreateRes {
      _blacklist :: BlacklistT Identity
    }

derive instance genericCreateRes :: Generic CreateRes
derive instance newtypeCreateRes :: Newtype CreateRes _

--------------------------------------------------------------------------------
_CreateRes :: Iso' CreateRes { _blacklist :: BlacklistT Identity}
_CreateRes = _Newtype

blacklist :: Lens' CreateRes (BlacklistT Identity)
blacklist = _Newtype <<< prop (SProxy :: SProxy "_blacklist")

--------------------------------------------------------------------------------
newtype UpdateReq =
    UpdateReq {
      _remarks :: Maybe String
    , _TenantOrganizationId :: Maybe TenantOrganizationId
    , _EntityId :: Maybe String
    , _entityType :: Maybe EntityType
    , _info :: Maybe String
    , _startTime :: Maybe LocalTime
    , _endTime :: Maybe LocalTime
    }

derive instance genericUpdateReq :: Generic UpdateReq
derive instance newtypeUpdateReq :: Newtype UpdateReq _

--------------------------------------------------------------------------------
_UpdateReq :: Iso' UpdateReq { _remarks :: Maybe String, _TenantOrganizationId :: Maybe TenantOrganizationId, _EntityId :: Maybe String, _entityType :: Maybe EntityType, _info :: Maybe String, _startTime :: Maybe LocalTime, _endTime :: Maybe LocalTime}
_UpdateReq = _Newtype

remarks :: Lens' UpdateReq (Maybe String)
remarks = _Newtype <<< prop (SProxy :: SProxy "_remarks")

TenantOrganizationId :: Lens' UpdateReq (Maybe TenantOrganizationId)
TenantOrganizationId = _Newtype <<< prop (SProxy :: SProxy "_TenantOrganizationId")

EntityId :: Lens' UpdateReq (Maybe String)
EntityId = _Newtype <<< prop (SProxy :: SProxy "_EntityId")

entityType :: Lens' UpdateReq (Maybe EntityType)
entityType = _Newtype <<< prop (SProxy :: SProxy "_entityType")

info :: Lens' UpdateReq (Maybe String)
info = _Newtype <<< prop (SProxy :: SProxy "_info")

startTime :: Lens' UpdateReq (Maybe LocalTime)
startTime = _Newtype <<< prop (SProxy :: SProxy "_startTime")

endTime :: Lens' UpdateReq (Maybe LocalTime)
endTime = _Newtype <<< prop (SProxy :: SProxy "_endTime")

--------------------------------------------------------------------------------
newtype UpdateRes =
    UpdateRes {
      _blacklist :: BlacklistT Identity
    }

derive instance genericUpdateRes :: Generic UpdateRes
derive instance newtypeUpdateRes :: Newtype UpdateRes _

--------------------------------------------------------------------------------
_UpdateRes :: Iso' UpdateRes { _blacklist :: BlacklistT Identity}
_UpdateRes = _Newtype

blacklist :: Lens' UpdateRes (BlacklistT Identity)
blacklist = _Newtype <<< prop (SProxy :: SProxy "_blacklist")

--------------------------------------------------------------------------------
newtype ListRes =
    ListRes {
      _blacklists :: Array (BlacklistT Identity)
    }

derive instance genericListRes :: Generic ListRes
derive instance newtypeListRes :: Newtype ListRes _

--------------------------------------------------------------------------------
_ListRes :: Iso' ListRes { _blacklists :: Array (BlacklistT Identity)}
_ListRes = _Newtype

blacklists :: Lens' ListRes (Array (BlacklistT Identity))
blacklists = _Newtype <<< prop (SProxy :: SProxy "_blacklists")

--------------------------------------------------------------------------------
