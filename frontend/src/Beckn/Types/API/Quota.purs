-- File auto generated by purescript-bridge! --
module Beckn.Types.API.Quota where

import Beckn.Types.Common (EntityType, QuotaType)
import Beckn.Types.Storage.Quota (QuotaT)
import Data.Functor.Identity (Identity)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Data.Time.LocalTime.Internal.LocalTime (LocalTime)
import Prim (Array, Int, String)

import Prelude
import Data.Generic (class Generic)

newtype UpdateReq =
    UpdateReq {
      _maxAllowed :: Maybe Int
    , _startTime :: Maybe LocalTime
    , _endTime :: Maybe LocalTime
    }

derive instance genericUpdateReq :: Generic UpdateReq
derive instance newtypeUpdateReq :: Newtype UpdateReq _

--------------------------------------------------------------------------------
_UpdateReq :: Iso' UpdateReq { _maxAllowed :: Maybe Int, _startTime :: Maybe LocalTime, _endTime :: Maybe LocalTime}
_UpdateReq = _Newtype

maxAllowed :: Lens' UpdateReq (Maybe Int)
maxAllowed = _Newtype <<< prop (SProxy :: SProxy "_maxAllowed")

startTime :: Lens' UpdateReq (Maybe LocalTime)
startTime = _Newtype <<< prop (SProxy :: SProxy "_startTime")

endTime :: Lens' UpdateReq (Maybe LocalTime)
endTime = _Newtype <<< prop (SProxy :: SProxy "_endTime")

--------------------------------------------------------------------------------
newtype UpdateRes =
    UpdateRes {
      _quota :: QuotaT Identity
    }

derive instance genericUpdateRes :: Generic UpdateRes
derive instance newtypeUpdateRes :: Newtype UpdateRes _

--------------------------------------------------------------------------------
_UpdateRes :: Iso' UpdateRes { _quota :: QuotaT Identity}
_UpdateRes = _Newtype

quota :: Lens' UpdateRes (QuotaT Identity)
quota = _Newtype <<< prop (SProxy :: SProxy "_quota")

--------------------------------------------------------------------------------
newtype ListRes =
    ListRes {
      _quotas :: Array (QuotaT Identity)
    }

derive instance genericListRes :: Generic ListRes
derive instance newtypeListRes :: Newtype ListRes _

--------------------------------------------------------------------------------
_ListRes :: Iso' ListRes { _quotas :: Array (QuotaT Identity)}
_ListRes = _Newtype

quotas :: Lens' ListRes (Array (QuotaT Identity))
quotas = _Newtype <<< prop (SProxy :: SProxy "_quotas")

--------------------------------------------------------------------------------
newtype CreateRes =
    CreateRes {
      _quota :: QuotaT Identity
    }

derive instance genericCreateRes :: Generic CreateRes
derive instance newtypeCreateRes :: Newtype CreateRes _

--------------------------------------------------------------------------------
_CreateRes :: Iso' CreateRes { _quota :: QuotaT Identity}
_CreateRes = _Newtype

quota :: Lens' CreateRes (QuotaT Identity)
quota = _Newtype <<< prop (SProxy :: SProxy "_quota")

--------------------------------------------------------------------------------
newtype CreateReq =
    CreateReq {
      _maxAllowed :: Int
    , _quotaType :: QuotaType
    , _EntityId :: String
    , _entityType :: EntityType
    , _startTime :: LocalTime
    , _endTime :: LocalTime
    }

derive instance genericCreateReq :: Generic CreateReq
derive instance newtypeCreateReq :: Newtype CreateReq _

--------------------------------------------------------------------------------
_CreateReq :: Iso' CreateReq { _maxAllowed :: Int, _quotaType :: QuotaType, _EntityId :: String, _entityType :: EntityType, _startTime :: LocalTime, _endTime :: LocalTime}
_CreateReq = _Newtype

maxAllowed :: Lens' CreateReq Int
maxAllowed = _Newtype <<< prop (SProxy :: SProxy "_maxAllowed")

quotaType :: Lens' CreateReq QuotaType
quotaType = _Newtype <<< prop (SProxy :: SProxy "_quotaType")

EntityId :: Lens' CreateReq String
EntityId = _Newtype <<< prop (SProxy :: SProxy "_EntityId")

entityType :: Lens' CreateReq EntityType
entityType = _Newtype <<< prop (SProxy :: SProxy "_entityType")

startTime :: Lens' CreateReq LocalTime
startTime = _Newtype <<< prop (SProxy :: SProxy "_startTime")

endTime :: Lens' CreateReq LocalTime
endTime = _Newtype <<< prop (SProxy :: SProxy "_endTime")

--------------------------------------------------------------------------------
