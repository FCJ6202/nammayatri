-- File auto generated by purescript-bridge! --
module Beckn.Types.API.Registration where

import Beckn.Types.Storage.Customer (CustomerRole, CustomerT)
import Beckn.Types.Storage.RegistrationToken (LoginType, Medium, RTEntityType)
import Beckn.Types.Storage.User (UserT)
import Data.Functor.Identity (Identity)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (Int, String)

import Prelude
import Data.Generic (class Generic)

newtype LoginReq =
    LoginReq {
      _medium :: Medium
    , __type :: LoginType
    , _hash :: String
    , _identifier :: String
    }

derive instance genericLoginReq :: Generic LoginReq
derive instance newtypeLoginReq :: Newtype LoginReq _

--------------------------------------------------------------------------------
_LoginReq :: Iso' LoginReq { _medium :: Medium, __type :: LoginType, _hash :: String, _identifier :: String}
_LoginReq = _Newtype

medium :: Lens' LoginReq Medium
medium = _Newtype <<< prop (SProxy :: SProxy "_medium")

_type :: Lens' LoginReq LoginType
_type = _Newtype <<< prop (SProxy :: SProxy "__type")

hash :: Lens' LoginReq String
hash = _Newtype <<< prop (SProxy :: SProxy "_hash")

identifier :: Lens' LoginReq String
identifier = _Newtype <<< prop (SProxy :: SProxy "_identifier")

--------------------------------------------------------------------------------
newtype LoginRes =
    LoginRes {
      registrationToken :: String
    , customer :: Maybe (CustomerT Identity)
    , user :: Maybe (UserT Identity)
    }

derive instance genericLoginRes :: Generic LoginRes
derive instance newtypeLoginRes :: Newtype LoginRes _

--------------------------------------------------------------------------------
_LoginRes :: Iso' LoginRes { registrationToken :: String, customer :: Maybe (CustomerT Identity), user :: Maybe (UserT Identity)}
_LoginRes = _Newtype

--------------------------------------------------------------------------------
newtype InitiateLoginReq =
    InitiateLoginReq {
      _medium :: Medium
    , __type :: LoginType
    , _identifier :: String
    , _role :: Maybe CustomerRole
    , _entityType :: RTEntityType
    }

derive instance genericInitiateLoginReq :: Generic InitiateLoginReq
derive instance newtypeInitiateLoginReq :: Newtype InitiateLoginReq _

--------------------------------------------------------------------------------
_InitiateLoginReq :: Iso' InitiateLoginReq { _medium :: Medium, __type :: LoginType, _identifier :: String, _role :: Maybe CustomerRole, _entityType :: RTEntityType}
_InitiateLoginReq = _Newtype

medium :: Lens' InitiateLoginReq Medium
medium = _Newtype <<< prop (SProxy :: SProxy "_medium")

_type :: Lens' InitiateLoginReq LoginType
_type = _Newtype <<< prop (SProxy :: SProxy "__type")

identifier :: Lens' InitiateLoginReq String
identifier = _Newtype <<< prop (SProxy :: SProxy "_identifier")

role :: Lens' InitiateLoginReq (Maybe CustomerRole)
role = _Newtype <<< prop (SProxy :: SProxy "_role")

entityType :: Lens' InitiateLoginReq RTEntityType
entityType = _Newtype <<< prop (SProxy :: SProxy "_entityType")

--------------------------------------------------------------------------------
newtype InitiateLoginRes =
    InitiateLoginRes {
      tokenId :: String
    , attempts :: Int
    }

derive instance genericInitiateLoginRes :: Generic InitiateLoginRes
derive instance newtypeInitiateLoginRes :: Newtype InitiateLoginRes _

--------------------------------------------------------------------------------
_InitiateLoginRes :: Iso' InitiateLoginRes { tokenId :: String, attempts :: Int}
_InitiateLoginRes = _Newtype

--------------------------------------------------------------------------------
newtype ReInitiateLoginReq =
    ReInitiateLoginReq {
      _medium :: Medium
    , __type :: LoginType
    , _identifier :: String
    , _entityType :: RTEntityType
    }

derive instance genericReInitiateLoginReq :: Generic ReInitiateLoginReq
derive instance newtypeReInitiateLoginReq :: Newtype ReInitiateLoginReq _

--------------------------------------------------------------------------------
_ReInitiateLoginReq :: Iso' ReInitiateLoginReq { _medium :: Medium, __type :: LoginType, _identifier :: String, _entityType :: RTEntityType}
_ReInitiateLoginReq = _Newtype

medium :: Lens' ReInitiateLoginReq Medium
medium = _Newtype <<< prop (SProxy :: SProxy "_medium")

_type :: Lens' ReInitiateLoginReq LoginType
_type = _Newtype <<< prop (SProxy :: SProxy "__type")

identifier :: Lens' ReInitiateLoginReq String
identifier = _Newtype <<< prop (SProxy :: SProxy "_identifier")

entityType :: Lens' ReInitiateLoginReq RTEntityType
entityType = _Newtype <<< prop (SProxy :: SProxy "_entityType")

--------------------------------------------------------------------------------
