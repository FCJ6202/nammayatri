version: "3"
services:
  app-db:
    image: "postgis/postgis:12-3.0"
    container_name: "atlas-app"
    ports:
      - "5433:5432"
    volumes:
      - ./sql-seed/app-backend-seed.sql:/docker-entrypoint-initdb.d/1-app-backend-seed.sql:Z
      - ./local-testing-data/app-backend.sql:/docker-entrypoint-initdb.d/2-app-backend-testing-data.sql:Z
    environment:
      - POSTGRES_DB=atlas_app
      - POSTGRES_USER=atlas
      - POSTGRES_PASSWORD=atlas
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth=scram-sha-256
  transporter-db:
    image: "postgis/postgis:12-3.0"
    container_name: "atlas-transporter"
    ports:
      - "5434:5432"
    volumes:
      - ./sql-seed/transporter-backend-seed.sql:/docker-entrypoint-initdb.d/1-transporter-backend-seed.sql:Z
      - ./local-testing-data/beckn-transport.sql:/docker-entrypoint-initdb.d/2-beckn-transport-testing-data.sql:Z
    environment:
      - POSTGRES_DB=atlas_transporter
      - POSTGRES_USER=atlas
      - POSTGRES_PASSWORD=atlas
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth=scram-sha-256
  gateway-db:
    image: "postgis/postgis:12-3.0"
    container_name: "atlas-gateway"
    ports:
      - "5435:5432"
    volumes:
      - ./sql-seed/gateway-backend-seed.sql:/docker-entrypoint-initdb.d/1-gateway-backend-seed.sql:Z
      - ./local-testing-data/gateway.sql:/docker-entrypoint-initdb.d/2-gateway-testing-data.sql:Z
    environment:
      - POSTGRES_DB=atlas_gateway
      - POSTGRES_USER=atlas
      - POSTGRES_PASSWORD=atlas
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth=scram-sha-256
  fmd-wrapper-db:
    image: "postgis/postgis:12-3.0"
    container_name: "atlas-fmd-wrapper"
    ports:
      - "5436:5432"
    volumes:
      - ./sql-seed/fmd-wrapper-backend-seed.sql:/docker-entrypoint-initdb.d/1-fmd-wrapper-backend-seed.sql:Z
      - ./local-testing-data/fmd-wrapper.sql:/docker-entrypoint-initdb.d/2-fmd-wrapper-testing-data.sql:Z
    environment:
      - POSTGRES_DB=atlas_fmd_wrapper
      - POSTGRES_USER=atlas
      - POSTGRES_PASSWORD=atlas
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth=scram-sha-256
  parking-db:
    image: "postgis/postgis:12-3.0"
    container_name: "atlas_parking"
    ports:
      - "5437:5432"
    volumes:
      - ./sql-seed/parking-bap-seed.sql:/docker-entrypoint-initdb.d/1-parking-bap-seed.sql:Z
      - ./local-testing-data/parking-bap.sql:/docker-entrypoint-initdb.d/2-parking-bap-testing-data.sql:Z
    environment:
      - POSTGRES_DB=atlas_parking
      - POSTGRES_USER=atlas
      - POSTGRES_PASSWORD=atlas
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth=scram-sha-256
  public-transport-db:
    image: "postgis/postgis:12-3.0"
    container_name: "atlas_public_transport"
    ports:
      - "5438:5432"
    volumes:
      - ./sql-seed/public-transport-bap-seed.sql:/docker-entrypoint-initdb.d/1-public-transport-bap-seed.sql:Z
      - ./local-testing-data/public-transport-bap.sql:/docker-entrypoint-initdb.d/2-public-transport-bap-testing-data.sql:Z
    environment:
      - POSTGRES_DB=atlas_public_transport
      - POSTGRES_USER=atlas
      - POSTGRES_PASSWORD=atlas
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth=scram-sha-256
  mock-registry-db:
    image: "postgis/postgis:12-3.0"
    container_name: "atlas_registry"
    ports:
      - "5439:5432"
    volumes:
      - ./sql-seed/mock-registry-seed.sql:/docker-entrypoint-initdb.d/1-mock-registry-seed.sql:Z
      - ./local-testing-data/mock-registry.sql:/docker-entrypoint-initdb.d/2-mock-registry-testing-data.sql:Z
    environment:
      - POSTGRES_DB=atlas_registry
      - POSTGRES_USER=atlas
      - POSTGRES_PASSWORD=atlas
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth=scram-sha-256
  redis:
    image: "redis:5"
    ports:
      - "6379:6379"
  passetto-db:
    image: "postgres:12.3"
    container_name: "passetto-enc-db"
    ports:
      - "5422:5432"
    volumes:
      - ./sql-seed/passetto-seed.sql:/docker-entrypoint-initdb.d/create_schema.sql:Z
    environment:
      - POSTGRES_DB=passetto
      - POSTGRES_USER=passetto
      - POSTGRES_PASSWORD=passetto
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth=scram-sha-256
  passetto-server:
    image: "juspayin/passetto-hs:0b18530"
    container_name: "passetto-enc-server"
    command: demo # for DEV only
    ports:
      - "8021:8012"
    environment:
      - "PASSETTO_PG_BACKEND_CONN_STRING=postgresql://passetto:passetto@passetto-enc-db:5432/passetto"
  prometheus:
    image: prom/prometheus:v2.27.1
    container_name: beckn-prom
    command: "--config.file=/etc/prometheus/config.yml"
    ports:
      - "9090:9090"
    volumes:
      - prometheus-volume:/prometheus
      - ./prometheus/config.yml:/etc/prometheus/config.yml
    profiles:
      - monitoring
  grafana:
    image: grafana/grafana:7.5.9
    container_name: beckn-grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=beckn
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/config.ini:/etc/grafana/config.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    profiles:
      - monitoring
volumes:
  prometheus-volume:
